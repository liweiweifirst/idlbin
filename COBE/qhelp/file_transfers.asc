.Title
FILE TRANSFERS
.Help

The most common methods of file transfer are DECNET copy, Kermit,
and FTP.  Each has particular uses and protocols, which are
discussed below.

DECNET COPY

The DCL COPY command can be used both for local file transfers
(between directories and disks within a cluster) and for
transfers between VAX installations.  It supports all file types,
including text, binary, and executable images.  Local file
transfers require only that the user have READ access to the
source file and WRITE access to the destination directory.  Use
the standard DCL COPY syntax:

COPY source_disk:[source_directory]source_file destination_file

where the file destination is assumed to be in the user's current
default directory.  If this is not the case, the destination file
specification will also require the directory and (if not on the
user's disk) the disk identifier.

The COPY command can also be used to copy files between VAX
installations, e.g., from a remote to a local VAX.  If the source
files have WORLD READ access, this is nearly identical to the
local COPY, in that the user need only add the remote VAX node
name to the source file specification:

COPY src_node::src_disk:[src_dir]source_file destination_file

If the source files do not have WORLD READ access the operation
is slightly more complicated, since the user needs to provide
information to the remote system in order to authorize access to
the files (assuming the user's ID account on the remote system
has READ privileges for the source files). This requires that
the user define a logical symbol for the remote node which
includes the user's ID and password.  This is done using the DCL
ASSIGN command as follows:

ASSIGN " remote_node "" userid password""::" NODE

The copy is then performed in the normal manner, except that the
symbol NODE is used in place of the actual remote node name:

COPY NODE:: src_disk:[src_dir]source_file destination_file

if the source file is at the remote VAX.  The NODE symbol can
also be used to copy files to a remote VAX, assuming that the
user's ID at the remote installation has WRITE access to the
destination directory.

There are some caveats in any file transfer between
installations.  If the distance is large it may be advisable to
use the /READ_CHECK qualifier for the DCL COPY; this causes each
record to be read twice in order to catch transmission errors.
Also, the speed of file transmission depends upon both the speed of
the line between the installation and the usage of the machines
at each end.  Transferring files larger than a few thousand
blocks may be very slow during prime computing hours, and users
are advised to transfer large files during off-hours whenever
possible.  It is generally useful to check the transmission speed
with a small file before starting to copy large files.

KERMIT

Kermit is a file transfer protocol supported on most types of
operating systems, including VAX/VMS, UNIX, DOS, and Macintosh.  This
versatility makes it extremely useful for transferring files between
computers of different types, e.g., copying files from a cluster VAX
to a floppy disk on a PC being used as a terminal emulator.  It is
used most frequently for text file transfers but also supports binary
and executable image files.  Detailed information about Kermit on CDAC
workstations is available from VMS HELP and ULTRIX man.  There is also
additional help within Kermit: typing HELP alone provides a summary of
the available commands; typing

Kermit> HELP topic

gives more information on the requested topic.  Help information for
Kermit on the Macintosh and PC should be found in the documentation
for your particular terminal emulators.

The use of Kermit generally involves putting one computer into server
mode and then sending commands from the other computer.  If both
computers are VAXes, for example, then Kermit is started on both
machines; if one computer is a PC being used as a terminal, then the
Kermit commands can usually be entered from the local command mode.
It is generally easier to set the default directories to the desired
source and destination directories before starting Kermit. 

To start Kermit on a workstation, simply enter "kermit" at the system
level prompt (without the quotes).  Then put the workstation into
server mode, by entering "server" at the Kermit prompt (no quotes).

Kermit on the CDAC Macintoshes is most often used from the
VersaTerm-Pro package.  If the remote node has been set up in server
mode, check the Kermit Options... screen under the Settings pull-down
menu.  The box next to the "Use Server Mode" option must have an X in
it.  Click on the box if it does not.  Kermit commands may then be
issued from the Kermit Server... option under the File pull-down menu.

PC users running SmartTerm 240 can set up the remote node in server
mode and then press ALT-Y to get the PC into Kermit command mode.
Enter the Kermit commands from this panel.

  Note: Cluster (VMS) users cannot use the current version of C-Kermit
  with this SmartTerm 240.  They may access the old version with the
  commands

  $ KERMIT :== $COBE_SOFT:[PUBLIC.OLD_KERMIT]KERMIT
  $ KERMIT

  (These commands are not needed on the ULTRIX nodes.)

The most common Kermit commands for file transfers are GET and
SEND, which are used from the Kermit host to retrieve and
transmit files.  Other useful commands are: BYE, which terminates
the Kermit session on the remote system; FINISH, which
gets the remote session out of SERVER mode; and SET FILE TYPE,
which is used to specify the file type for other than ASCII text
files.  The three types are:  ASCII, the default; BINARY, for
fixed record length binary data files; and FIXED, for executable
images.  The SET FILE TYPE commands should be executed on the
remote computer PRIOR to putting it into SERVER mode.

As an example of using Kermit, the following actions would be
performed to copy a file from a VAX to a floppy disk, or vice
versa, on an IBM PC running SmartTerm 240.

After logging onto the VAX and setting the default directory, at
the DCL prompt enter:

$ KERMIT

If copying other than a text file, set the file type; then put
the VAX session into server mode, as follows:

Kermit> SET FILE TYPE BINARY  e.g., for a binary file
Kermit> SERVER

To send Kermit commands from the PC, enter Alt-Y; this will bring
up the Kermit command window in SmartTerm.  To copy a file from
the VAX to the PC disk, enter:

GET file_name

Note that this will write the file to the current default drive
on the PC.  Also note that long VAX file names will be
abbreviated to DOS limits (8 characters in the first field and 3
in the second) and special characters will be replaced with `X's.
To copy a file from any disk on the PC to the current VAX
directory, enter:

SEND PC_disk:PC_pathfile_name

To get the VAX session out of server mode, enter:

FINISH

followed by Alt-Y, which will return you to Kermit on the VAX;
then enter

Kermit> EXIT

to return to DCL.

The user should be aware that file transfers using Kermit will
generally be slow compared to other means.  Generally, the limiting
factor will be the communications link: in the above example of the
VAX-to-PC transfer, this will be either a terminal server port
(typically 9600 baud) or a modem (most commonly 2400 baud).  (The CDAC
supports 2400 and 9600 baud access through its dial-in modems.)
At these rates it is impractical to transfer anything but text files
and moderately sized executables.  If the PC is interfaced directly to
the cluster (e.g., via an Ethernet card) the transfer rates can of
course be substantially greater, at which point the limiting factor is
likely to be the speed of the CPU.

FTP

FTP (File Transfer Program) can be used for transferring files
between sites, particularly when one or both of the sites are
not VAX installations.  The user must have complete login
information (user name and password) for the remote site.

To connect to the remote site, type

$ FTP node_name

This should get you a prompt with the name of the remote site,
for example, ARUBA.GSFC.NASA.GOV>. At this you enter:

REMOTE_SITE_NAME> USER username_on_remote_machine

(as in ARUBA.GSFC.NASA.GOV> USER JDOE for John Doe with user name
JDOE on the ARUBA machine).

You will then be prompted for the password corresponding to the remote
account.  A confirmation of login appears if all is well.

To transfer a file from the remote site to the local site, at the
remote site prompt type

GET filename_at_remote_site

FTP will respond with a "To local file:" Here you enter the name you
wish the file to have at the local site (i.e., the PC in this example)
or type a <CR> to keep the same name.

To transfer a file from the local site to the remote, type

PUT local_filename

at the remote site prompt.  FTP responds with "To remote file:", to
which you reply with the name you want the file to have at the remote
site (or, again, a <CR> to keep the same name).

GET and PUT may also be entered alone; the system will respond
with a FROM LOCAL (or REMOTE) FILE: prompt as well as a TO:
prompt.  File and directory names must adhere to the conventions
of the machine on which they reside.  (UNIX operating systems
are case-sensitive, for example.)

To change directories at the remote site, type

REMOTE_SITE_NAME_FTP_PROMPT> CD

You will then be prompted for the directory name.  To see a
listing of the remote site file directory, type DIR.  A listing
of the local site directory can be seen by typing LDIR (from a
VAX local site) or !ls (from an Ultrix local site).

Other local VMS commands may be issued by typing PUSH; when
finished,  LO returns the session to FTP at the remote site.
On the Ultrix machines, local system commands may be issued by
prefacing them with the ! character.  Help may be obtained at
any time by typing ? with no <CR> at the FTP> prompt.

To end the remote session, type QUIT at the remote site prompt;
this returns the user to the local session.

Many hosts make available an anonymous FTP service to allow network
users to access various forms of public data and information.  To use
this service, log on in the usual way with the user name ANONYMOUS and
an arbitrary password.  Network etiquette demands that you use your
e-mail address or at least your user ID as a password.  This service,
when available, usually does not gain access to all files on the host,
but only to those that the administrator makes available for anonymous
FTP.

                           {R} End of text. {N}


;DISCLAIMER:
;
;This software was written at the Cosmology Data Analysis Center in
;support of the Cosmic Background Explorer (COBE) Project under NASA
;contract number NAS5-30750.
;
;This software may be used, copied, modified or redistributed so long
;as it is not sold and this disclaimer is distributed along with the
;software.  If you modify the software please indicate your
;modifications in a prominent place in the source code.  
;
;All routines are provided "as is" without any express or implied
;warranties whatsoever.  All routines are distributed without guarantee
;of support.  If errors are found in this code it is requested that you
;contact us by sending email to the address below to report the errors
;but we make no claims regarding timely fixes.  This software has been 
;used for analysis of COBE data but has not been validated and has not 
;been used to create validated data sets of any type.
;
;Please send bug reports to CGIS@ZWICKY.GSFC.NASA.GOV.


