;;
;; IDLWAVE catalog for library Coyote
;; Automatically Generated -- do not edit.
;; Created by idlwave_catalog on Wed Jun 13 14:08:03 2007
;;
(setq idlwave-library-catalog-libname "Coyote")
(setq idlwave-library-catalog-routines
 '(("AdjustPosition_CenterTLB" pro nil (lib "adjustposition.pro" nil "Coyote") "%s, tlb" (nil))
   ("AdjustPosition_PlotEvents" pro nil (lib "adjustposition.pro" nil "Coyote") "%s, event" (nil))
   ("AdjustPosition_FieldEvents" pro nil (lib "adjustposition.pro" nil "Coyote") "%s, event" (nil))
   ("AdjustPosition_ButtonEvents" pro nil (lib "adjustposition.pro" nil "Coyote") "%s, event" (nil))
   ("AdjustPosition" fun nil (lib "adjustposition.pro" nil "Coyote") "Result = %s(currentPosition)" (nil ("Cancel") ("Group_Leader") ("Title") ("XOffset") ("YOffset")))
   ("AnnotateWindow" pro nil (lib "annotatewindow.pro" nil "Coyote") "%s, theBackground" (nil ("BG_COLOR") ("COLOR") ("NOMARGIN") ("XRANGE") ("YRANGE")))
   ("ArcSample" pro nil (lib "arcsample.pro" nil "Coyote") "%s, x_in, y_in, x_out, y_out" (nil ("PHASE") ("POINTS")))
   ("ASinhScl_ASinh" fun nil (lib "asinhscl.pro" nil "Coyote") "Result = %s(x)" (nil))
   ("ASinhScl" fun nil (lib "asinhscl.pro" nil "Coyote") "Result = %s(image)" (nil ("BETA") ("MAX") ("MIN") ("NEGATIVE") ("OMAX") ("OMIN")))
   ("ASPECT" fun nil (lib "aspect.pro" nil "Coyote") "Result = %s(aspectRatio)" (nil ("MARGIN") ("WindowAspect")))
   ("BitGet" fun nil (lib "bitget.pro" nil "Coyote") "Result = %s(value, bit)" (nil ("SILENT")))
   ("CapFirstLetter" fun nil (lib "capfirstletter.pro" nil "Coyote") "Result = %s(theString)" (nil))
   ("CHGCOLOR_GANG" pro nil (lib "chgcolor.pro" nil "Coyote") "%s, event" (nil))
   ("CHGCOLOR_SLIDERS" pro nil (lib "chgcolor.pro" nil "Coyote") "%s, event" (nil))
   ("CHGCOLOR_PROTECT_COLORS" pro nil (lib "chgcolor.pro" nil "Coyote") "%s, event" (nil))
   ("CHGCOLOR_QUIT" pro nil (lib "chgcolor.pro" nil "Coyote") "%s, event" (nil))
   ("CHGCOLOR_ORIGINAL" pro nil (lib "chgcolor.pro" nil "Coyote") "%s, event" (nil))
   ("CHGCOLOR" pro nil (lib "chgcolor.pro" nil "Coyote") "%s, index" (nil ("GROUP_LEADER") ("JUST_REGISTER") ("LABEL") ("NOTIFYID") ("TITLE") ("XOFFSET") ("YOFFSET")))
   ("CIndex_Colors" pro nil (lib "cindex.pro" nil "Coyote") "%s, event" (nil))
   ("CIndex_Event" pro nil (lib "cindex.pro" nil "Coyote") "%s, event" (nil))
   ("CIndex" pro nil (lib "cindex.pro" nil "Coyote") "%s" (nil ("NOTIFYID")))
   ("Clipboard" pro nil (lib "clipboard.pro" nil "Coyote") "%s, windowIndex" (nil ("_Extra")))
   ("COLOR24" fun nil (lib "color24.pro" nil "Coyote") "Result = %s(color)" (nil))
   ("COLORBAR" pro nil (lib "colorbar.pro" nil "Coyote") "%s" (nil ("_EXTRA") ("ANNOTATECOLOR") ("BOTTOM") ("CHARSIZE") ("COLOR") ("DIVISIONS") ("FONT") ("FORMAT") ("INVERTCOLORS") ("MAXRANGE") ("MINOR") ("MINRANGE") ("NCOLORS") ("POSITION") ("RANGE") ("REVERSE") ("RIGHT") ("TICKLEN") ("TICKNAMES") ("TITLE") ("TOP") ("VERTICAL") ("XLOG") ("YLOG")))
   ("Clamp" pro "ColorBar" (lib "colorbar__define.pro" nil "Coyote") "Obj ->[%s::]%s, datarange" (nil ("Draw")))
   ("GetProperty" pro "Colorbar" (lib "colorbar__define.pro" nil "Coyote") "Obj ->[%s::]%s" (nil ("Background") ("Bottom") ("Charsize") ("Color") ("Font") ("Format") ("Index") ("Major") ("Minor") ("MinusOne") ("NColors") ("Neighbor") ("Position") ("Range") ("TickLen") ("TickV") ("Title") ("Vertical") ("XEraseBox") ("YEraseBox")))
   ("SetProperty" pro "Colorbar" (lib "colorbar__define.pro" nil "Coyote") "Obj ->[%s::]%s" (nil ("Background") ("Bottom") ("Charsize") ("Color") ("Draw") ("Erase") ("Font") ("Format") ("Horizontal") ("Index") ("Major") ("Minor") ("MinusOne") ("NColors") ("Neighbor") ("Position") ("Range") ("TickLen") ("TickV") ("Title") ("Vertical") ("XEraseBox") ("YEraseBox")))
   ("LoadCT" pro "Colorbar" (lib "colorbar__define.pro" nil "Coyote") "Obj ->[%s::]%s, index" (nil ("Draw") ("Erase")))
   ("Erase" pro "Colorbar" (lib "colorbar__define.pro" nil "Coyote") "Obj ->[%s::]%s" (nil))
   ("Draw" pro "Colorbar" (lib "colorbar__define.pro" nil "Coyote") "Obj ->[%s::]%s" (nil ("Erase")))
   ("CleanUp" pro "Colorbar" (lib "colorbar__define.pro" nil "Coyote") "Obj ->[%s::]%s" (nil))
   ("Init" fun "Colorbar" (lib "colorbar__define.pro" nil "Coyote") "Result = Obj ->[%s::]%s" (nil ("Background") ("Bottom") ("Charsize") ("Color") ("Font") ("Format") ("Index") ("Major") ("Minor") ("MinusOne") ("NColors") ("Neighbor") ("Position") ("Range") ("TickLen") ("TickV") ("Title") ("Vertical") ("XEraseBox") ("YEraseBox")))
   ("Colorbar__Define" pro nil (lib "colorbar__define.pro" nil "Coyote") "%s" (nil))
   ("ColorButtonBitmap" fun nil (lib "colorbuttonbitmap.pro" nil "Coyote") "Result = %s(theText)" (nil ("BGColor") ("FGColor")))
   ("Normalize" fun nil (lib "contrastzoom.pro" nil "Coyote") "Result = %s(range)" (nil ("Position")))
   ("Clamp" pro "ContrastZoom_VColorBar" (lib "contrastzoom.pro" nil "Coyote") "Obj ->[%s::]%s, datarange" (nil))
   ("INIT" fun "ContrastZoom_VColorBar" (lib "contrastzoom.pro" nil "Coyote") "Result = Obj ->[%s::]%s" (nil ("_Extra") ("Color") ("Major") ("Minor") ("Name") ("NColors") ("Palette") ("Position") ("Range") ("Title")))
   ("Cleanup" pro "ContrastZoom_VColorBar" (lib "contrastzoom.pro" nil "Coyote") "Obj ->[%s::]%s" (nil))
   ("GetProperty" pro "ContrastZoom_VColorBar" (lib "contrastzoom.pro" nil "Coyote") "Obj ->[%s::]%s" (nil ("_Ref_Extra") ("Color") ("Major") ("Minor") ("Name") ("Palette") ("Position") ("Range") ("Text") ("Title") ("Transform")))
   ("SetProperty" pro "ContrastZoom_VColorBar" (lib "contrastzoom.pro" nil "Coyote") "Obj ->[%s::]%s" (nil ("_Extra") ("Color") ("Major") ("Minor") ("Name") ("Palette") ("Position") ("Range") ("Title") ("Transform")))
   ("ContrastZoom_VColorBar__Define" pro nil (lib "contrastzoom.pro" nil "Coyote") "%s" (nil))
   ("ContrastZoom_Aspect" fun nil (lib "contrastzoom.pro" nil "Coyote") "Result = %s(aspectRatio)" (nil ("MARGIN") ("WindowAspect")))
   ("ContrastZoom_Resize" pro nil (lib "contrastzoom.pro" nil "Coyote") "%s, event" (nil))
   ("ContrastZoom_DistinguishEvents" pro nil (lib "contrastzoom.pro" nil "Coyote") "%s, event" (nil))
   ("ContrastZoom_Cleanup" pro nil (lib "contrastzoom.pro" nil "Coyote") "%s, tlb" (nil))
   ("ContrastZoom" pro nil (lib "contrastzoom.pro" nil "Coyote") "%s, image" (nil ("Colortable") ("Group_Leader")))
   ("Count_Rows" fun nil (lib "count_rows.pro" nil "Coyote") "Result = %s(filename)" (nil ("MaxRows")))
   ("CW_Drawcolor_FindTLB" fun nil (lib "cw_drawcolor.pro" nil "Coyote") "Result = %s(startID)" (nil))
   ("CW_Drawcolor_Error_Message" fun nil (lib "cw_drawcolor.pro" nil "Coyote") "Result = %s(theMessage)" (nil ("_Extra") ("NoName") ("Traceback")))
   ("GetTLB" fun "CW_DrawColor" (lib "cw_drawcolor.pro" nil "Coyote") "Result = Obj ->[%s::]%s" (nil))
   ("Realize" pro "CW_DrawColor" (lib "cw_drawcolor.pro" nil "Coyote") "Obj ->[%s::]%s" (nil))
   ("CW_DrawColor_Realize" pro nil (lib "cw_drawcolor.pro" nil "Coyote") "%s, drawID" (nil))
   ("CW_DrawColor_Pickcolor" fun nil (lib "cw_drawcolor.pro" nil "Coyote") "Result = %s(event)" (nil))
   ("Pickcolor" fun "CW_DrawColor" (lib "cw_drawcolor.pro" nil "Coyote") "Result = Obj ->[%s::]%s" (nil))
   ("Init" fun "CW_DRAWCOLOR" (lib "cw_drawcolor.pro" nil "Coyote") "Result = Obj ->[%s::]%s(parent)" (nil ("Color") ("Column") ("Event_Func") ("Event_Pro") ("Index") ("Label_Left") ("Label_Right") ("LabelSize") ("LabelText") ("Title") ("UValue") ("XSize") ("YSize")))
   ("CW_DRAWCOLOR_Kill_Notify" pro nil (lib "cw_drawcolor.pro" nil "Coyote") "%s, drawID" (nil))
   ("Cleanup" pro "CW_DRAWCOLOR" (lib "cw_drawcolor.pro" nil "Coyote") "Obj ->[%s::]%s" (nil))
   ("CW_DRAWCOLOR__DEFINE" pro nil (lib "cw_drawcolor.pro" nil "Coyote") "%s" (nil))
   ("CW_DRAWCOLOR" fun nil (lib "cw_drawcolor.pro" nil "Coyote") "Result = %s(parent)" (nil ("Color") ("Column") ("Event_Func") ("Event_Pro") ("Index") ("Label_Left") ("Label_Right") ("LabelSize") ("LabelText") ("Object") ("Title") ("UValue") ("XSize") ("YSize")))
   ("DBLTOSTR" fun nil (lib "dbltostr.pro" nil "Coyote") "Result = %s(value)" (nil))
   ("DirPath" fun nil (lib "dirpath.pro" nil "Coyote") "Result = %s(subdirectory)" (nil ("RootDirectory")))
   ("Refresh" pro "DrawColors" (lib "drawcolors__define.pro" nil "Coyote") "Obj ->[%s::]%s" (nil))
   ("OriginalColors" pro "DrawColors" (lib "drawcolors__define.pro" nil "Coyote") "Obj ->[%s::]%s" (nil))
   ("XColors_Load_Colors" pro "DrawColors" (lib "drawcolors__define.pro" nil "Coyote") "Obj ->[%s::]%s" (nil))
   ("XColors" pro "DrawColors" (lib "drawcolors__define.pro" nil "Coyote") "Obj ->[%s::]%s" (nil))
   ("GetProperty" pro "DrawColors" (lib "drawcolors__define.pro" nil "Coyote") "Obj ->[%s::]%s" (nil ("BLUE") ("GREEN") ("NAMES") ("NCOLORS") ("RED") ("STARTINDEX")))
   ("SetProperty" pro "DrawColors" (lib "drawcolors__define.pro" nil "Coyote") "Obj ->[%s::]%s" (nil ("BLUE") ("GREEN") ("NAMES") ("NCOLORS") ("RED") ("STARTINDEX")))
   ("Color24" fun "DrawColors" (lib "drawcolors__define.pro" nil "Coyote") "Result = Obj ->[%s::]%s(theColor)" (nil))
   ("GetColor" fun "DrawColors" (lib "drawcolors__define.pro" nil "Coyote") "Result = Obj ->[%s::]%s(theColor, startIndex)" (nil ("AUTODETERMINE") ("INDEXNUMBER") ("TRUECOLOR")))
   ("GetColors" fun "DrawColors" (lib "drawcolors__define.pro" nil "Coyote") "Result = Obj ->[%s::]%s(startIndex)" (nil ("INDEXNUMBER") ("Structure") ("TRUECOLOR")))
   ("LoadColors" pro "DrawColors" (lib "drawcolors__define.pro" nil "Coyote") "Obj ->[%s::]%s, startindex" (nil))
   ("Button_Respond" pro "DrawColors" (lib "drawcolors__define.pro" nil "Coyote") "Obj ->[%s::]%s, event" (nil))
   ("Set_Slider_Color" pro "DrawColors" (lib "drawcolors__define.pro" nil "Coyote") "Obj ->[%s::]%s, event" (nil))
   ("Set_Standard_Color" pro "DrawColors" (lib "drawcolors__define.pro" nil "Coyote") "Obj ->[%s::]%s, event" (nil))
   ("DrawColors__Events" pro nil (lib "drawcolors__define.pro" nil "Coyote") "%s, event" (nil))
   ("Select" fun "DrawColors" (lib "drawcolors__define.pro" nil "Coyote") "Result = Obj ->[%s::]%s" (nil ("Cancel") ("Color") ("Group_Leader") ("Name") ("StartIndex") ("Title") ("TrueColor")))
   ("CLEANUP" pro "DrawColors" (lib "drawcolors__define.pro" nil "Coyote") "Obj ->[%s::]%s" (nil))
   ("INIT" fun "DrawColors" (lib "drawcolors__define.pro" nil "Coyote") "Result = Obj ->[%s::]%s(red, green, blue, names)" (nil))
   ("DrawColors__Define" pro nil (lib "drawcolors__define.pro" nil "Coyote") "%s" (nil))
   ("DrawCounties_DrawEntity" pro nil (lib "drawcounties.pro" nil "Coyote") "%s, entity" (nil ("COLOR") ("LINESTYLE") ("THICK")))
   ("DrawCounties" pro nil (lib "drawcounties.pro" nil "Coyote") "%s, countyFile" (nil ("ATTRIBUTE_NAME") ("COLORS") ("LINESTYLE") ("STATENAMES") ("THICK")))
   ("DrawStates_DrawEntity" pro nil (lib "drawstates.pro" nil "Coyote") "%s, entity" (nil ("COLOR") ("FILL") ("LINESTYLE") ("THICK")))
   ("DrawStates" pro nil (lib "drawstates.pro" nil "Coyote") "%s, stateFile" (nil ("ATTRIBUTE_NAME") ("COLORS") ("FILL") ("LINESTYLE") ("STATENAMES") ("THICK")))
   ("Find_Boundary_Outline" fun nil (lib "find_boundary.pro" nil "Coyote") "Result = %s(mask, darray, boundaryPts, ptIndex, xsize, ysize, from_direction)" (nil))
   ("Find_Boundary" fun nil (lib "find_boundary.pro" nil "Coyote") "Result = %s(indices)" (nil ("AREA") ("CENTER") ("PERIM_AREA") ("PERIMETER") ("SCALE") ("XSIZE") ("YSIZE")))
   ("Fit_Ellipse" fun nil (lib "fit_ellipse.pro" nil "Coyote") "Result = %s(indices)" (nil ("Axes") ("Center") ("NPoints") ("Orientation") ("SemiAxes") ("XSize") ("YSize")))
   ("FSC_Color_Count_Rows" fun nil (lib "fsc_color.pro" nil "Coyote") "Result = %s(filename)" (nil ("MaxRows")))
   ("FSC_Color_Color24" fun nil (lib "fsc_color.pro" nil "Coyote") "Result = %s(color)" (nil))
   ("FSC_Color" fun nil (lib "fsc_color.pro" nil "Coyote") "Result = %s(theColour, colorIndex)" (nil ("_Extra") ("AllColors") ("Cancel") ("ColorStructure") ("Decomposed") ("Filename") ("Names") ("NColors") ("Row") ("SelectColor") ("Triple")))
   ("CW_Light_Control_Intensity_Events" pro nil (lib "fsc_surface.pro" nil "Coyote") "%s, event" (nil))
   ("CW_Light_Control_Events" pro nil (lib "fsc_surface.pro" nil "Coyote") "%s, event" (nil))
   ("CW_Light_Control" fun nil (lib "fsc_surface.pro" nil "Coyote") "Result = %s(parent, theLight)" (nil ("Color") ("Event_Pro") ("Index") ("LabelSize") ("Name") ("UValue")))
   ("FSC_Surface_Elevation_Colors" pro nil (lib "fsc_surface.pro" nil "Coyote") "%s, event" (nil))
   ("FSC_Surface_Elevation_Shading" pro nil (lib "fsc_surface.pro" nil "Coyote") "%s, event" (nil))
   ("FSC_Surface_Aspect" fun nil (lib "fsc_surface.pro" nil "Coyote") "Result = %s(aspectRatio)" (nil ("MARGIN") ("WindowAspect")))
   ("FSC_Surface_Cleanup" pro nil (lib "fsc_surface.pro" nil "Coyote") "%s, tlb" (nil))
   ("FSC_Surface_Draw_Events" pro nil (lib "fsc_surface.pro" nil "Coyote") "%s, event" (nil))
   ("FSC_Surface_Style" pro nil (lib "fsc_surface.pro" nil "Coyote") "%s, event" (nil))
   ("FSC_Surface_Properties" pro nil (lib "fsc_surface.pro" nil "Coyote") "%s, event" (nil))
   ("FSC_Surface_Output" pro nil (lib "fsc_surface.pro" nil "Coyote") "%s, event" (nil))
   ("FSC_Surface_Exit" pro nil (lib "fsc_surface.pro" nil "Coyote") "%s, event" (nil))
   ("FSC_Surface_Light_Done" pro nil (lib "fsc_surface.pro" nil "Coyote") "%s, event" (nil))
   ("FSC_Surface_Light_Controls_Event" pro nil (lib "fsc_surface.pro" nil "Coyote") "%s, event" (nil))
   ("FSC_Surface_Light_Controls" pro nil (lib "fsc_surface.pro" nil "Coyote") "%s, event" (nil))
   ("FSC_Surface_Printing" pro nil (lib "fsc_surface.pro" nil "Coyote") "%s, event" (nil))
   ("FSC_Surface_Resize" pro nil (lib "fsc_surface.pro" nil "Coyote") "%s, event" (nil))
   ("FSC_Surface" pro nil (lib "fsc_surface.pro" nil "Coyote") "%s, data, x, y" (nil ("_Extra") ("Block") ("Colortable") ("Elevation_Shading") ("Exact") ("Group_Leader") ("Hidden_Lines") ("Landscape") ("Position") ("Shaded") ("Title") ("XRange") ("XTitle") ("YRange") ("YTitle") ("ZRange") ("ZTitle")))
   ("FSC_Window_Execute" pro nil (lib "fsc_window.pro" nil "Coyote") "%s, info" (nil))
   ("FSC_Window_Example" pro nil (lib "fsc_window.pro" nil "Coyote") "%s" (nil ("_Extra")))
   ("FSC_Window_PostScript" pro nil (lib "fsc_window.pro" nil "Coyote") "%s, event" (nil))
   ("FSC_Window_Print" pro nil (lib "fsc_window.pro" nil "Coyote") "%s, event" (nil))
   ("FSC_Window_SaveAs" pro nil (lib "fsc_window.pro" nil "Coyote") "%s, event" (nil))
   ("FSC_Window_Command__Define" pro nil (lib "fsc_window.pro" nil "Coyote") "%s" (nil))
   ("FSC_Window_Quit" pro nil (lib "fsc_window.pro" nil "Coyote") "%s, event" (nil))
   ("FSC_Window_Cleanup" pro nil (lib "fsc_window.pro" nil "Coyote") "%s, tlb" (nil))
   ("FSC_Window_TLB_Events" pro nil (lib "fsc_window.pro" nil "Coyote") "%s, event" (nil))
   ("FSC_Window_Colors" pro nil (lib "fsc_window.pro" nil "Coyote") "%s, event" (nil))
   ("FSC_Window" pro nil (lib "fsc_window.pro" nil "Coyote") "%s, command, p1, p2, p3" (nil ("_Extra") ("Group_Leader") ("Method") ("TLB") ("TVOrder") ("WBackground") ("WColors") ("WEraseIt") ("WPostScript") ("WPrint") ("WTitle") ("WXPos") ("WXSize") ("WYPos") ("WYSize")))
   ("GmaScl" fun nil (lib "gmascl.pro" nil "Coyote") "Result = %s(image)" (nil ("GAMMA") ("MAX") ("MIN") ("NEGATIVE") ("OMAX") ("OMIN")))
   ("Clamp" pro "HColorBar" (lib "hcolorbar__define.pro" nil "Coyote") "Obj ->[%s::]%s, datarange" (nil))
   ("INIT" fun "HColorBar" (lib "hcolorbar__define.pro" nil "Coyote") "Result = Obj ->[%s::]%s" (nil ("_Extra") ("Color") ("FontSize") ("Major") ("Minor") ("Name") ("NColors") ("Palette") ("Position") ("Range") ("Text") ("Title")))
   ("Cleanup" pro "HColorBar" (lib "hcolorbar__define.pro" nil "Coyote") "Obj ->[%s::]%s" (nil))
   ("GetProperty" pro "HColorBar" (lib "hcolorbar__define.pro" nil "Coyote") "Obj ->[%s::]%s" (nil ("_Ref_Extra") ("Color") ("Major") ("Minor") ("Name") ("Palette") ("Position") ("Range") ("Text") ("Title") ("Transform")))
   ("SetProperty" pro "HColorBar" (lib "hcolorbar__define.pro" nil "Coyote") "Obj ->[%s::]%s" (nil ("_Extra") ("Color") ("Major") ("Minor") ("Name") ("Palette") ("Position") ("Range") ("Text") ("Title") ("Transform")))
   ("HColorBar__Define" pro nil (lib "hcolorbar__define.pro" nil "Coyote") "%s" (nil))
   ("TEST_ISHDF" fun nil (lib "hdfread.pro" nil "Coyote") "Result = %s(filename)" (nil))
   ("HDFREAD" pro nil (lib "hdfread.pro" nil "Coyote") "%s, filename" (nil))
   ("HDFWRITE" pro nil (lib "hdfwrite.pro" nil "Coyote") "%s, filename" (nil))
   ("HELP_VAR_UNDEFINE" pro nil (lib "help_var.pro" nil "Coyote") "%s, varname" (nil))
   ("HELP_VAR" pro nil (lib "help_var.pro" nil "Coyote") "%s" (nil))
   ("HISTOMATCH_ERROR_MESSAGE" fun nil (lib "histomatch.pro" nil "Coyote") "Result = %s(theMessage)" (nil ("_Extra") ("Error") ("Informational") ("NoName") ("Title") ("Traceback")))
   ("HISTOMATCH" fun nil (lib "histomatch.pro" nil "Coyote") "Result = %s(image, histogram_to_match)" (nil))
   ("Example" pro nil (lib "histomatch.pro" nil "Coyote") "%s" (nil))
   ("hist_nd" fun nil (lib "hist_nd.pro" nil "Coyote") "Result = %s(V, bs)" (nil ("MAX") ("MIN") ("NBINS") ("REVERSE_INDICES")))
   ("Image_Blend_Output" pro nil (lib "image_blend.pro" nil "Coyote") "%s, event" (nil))
   ("Image_Blend_Exit" pro nil (lib "image_blend.pro" nil "Coyote") "%s, event" (nil))
   ("Image_Blend_Foreground_Colors" pro nil (lib "image_blend.pro" nil "Coyote") "%s, event" (nil))
   ("Image_Blend_Background_Colors" pro nil (lib "image_blend.pro" nil "Coyote") "%s, event" (nil))
   ("Image_Blend_CleanUp" pro nil (lib "image_blend.pro" nil "Coyote") "%s, id" (nil))
   ("Image_Blend_Slider" pro nil (lib "image_blend.pro" nil "Coyote") "%s, event" (nil))
   ("Image_Blend_Expose" pro nil (lib "image_blend.pro" nil "Coyote") "%s, event" (nil))
   ("Image_Blend_Event" pro nil (lib "image_blend.pro" nil "Coyote") "%s, event" (nil))
   ("Image_Blend" pro nil (lib "image_blend.pro" nil "Coyote") "%s, backgroundImage, foregroundImage" (nil ("Colortable")))
   ("Inside" fun nil (lib "inside.pro" nil "Coyote") "Result = %s(x, y, xpts, ypts)" (nil ("INDEX")))
   ("ADD" pro "LINKEDLIST" (lib "linkedlist__define.pro" nil "Coyote") "Obj ->[%s::]%s, item, index" (nil ("After") ("Before")))
   ("ADD_AFTER" pro "LINKEDLIST" (lib "linkedlist__define.pro" nil "Coyote") "Obj ->[%s::]%s, item, index" (nil))
   ("ADD_BEFORE" pro "LINKEDLIST" (lib "linkedlist__define.pro" nil "Coyote") "Obj ->[%s::]%s, item, index" (nil))
   ("ADD_TO_END" pro "LINKEDLIST" (lib "linkedlist__define.pro" nil "Coyote") "Obj ->[%s::]%s, item" (nil))
   ("DELETE" pro "LINKEDLIST" (lib "linkedlist__define.pro" nil "Coyote") "Obj ->[%s::]%s, index" (nil ("All") ("DESTROY")))
   ("DELETE_LAST_NODE" pro "LINKEDLIST" (lib "linkedlist__define.pro" nil "Coyote") "Obj ->[%s::]%s" (nil ("DESTROY")))
   ("DELETE_NODE" pro "LINKEDLIST" (lib "linkedlist__define.pro" nil "Coyote") "Obj ->[%s::]%s, index" (nil ("DESTROY")))
   ("DELETE_NODES" pro "LINKEDLIST" (lib "linkedlist__define.pro" nil "Coyote") "Obj ->[%s::]%s" (nil ("DESTROY")))
   ("GET_COUNT" fun "LINKEDLIST" (lib "linkedlist__define.pro" nil "Coyote") "Result = Obj ->[%s::]%s" (nil))
   ("GET_ITEM" fun "LINKEDLIST" (lib "linkedlist__define.pro" nil "Coyote") "Result = Obj ->[%s::]%s(index)" (nil ("ALL") ("Dereference")))
   ("GET_NODE" fun "LINKEDLIST" (lib "linkedlist__define.pro" nil "Coyote") "Result = Obj ->[%s::]%s(index)" (nil))
   ("HELP" pro "LINKEDLIST" (lib "linkedlist__define.pro" nil "Coyote") "Obj ->[%s::]%s" (nil ("Print")))
   ("MOVE_NODE" pro "LINKEDLIST" (lib "linkedlist__define.pro" nil "Coyote") "Obj ->[%s::]%s, nodeIndex, location" (nil ("Before")))
   ("REPLACE_ITEM" pro "LINKEDLIST" (lib "linkedlist__define.pro" nil "Coyote") "Obj ->[%s::]%s, Index, NewItem" (nil))
   ("CLEANUP" pro "LINKEDLIST" (lib "linkedlist__define.pro" nil "Coyote") "Obj ->[%s::]%s" (nil))
   ("INIT" fun "LINKEDLIST" (lib "linkedlist__define.pro" nil "Coyote") "Result = Obj ->[%s::]%s(item)" (nil))
   ("LINKEDLIST__DEFINE" pro nil (lib "linkedlist__define.pro" nil "Coyote") "%s" (nil))
   ("smooth2" fun nil (lib "loaddata.pro" nil "Coyote") "Result = %s(i, w)" (nil ("help")))
   ("makez" fun nil (lib "loaddata.pro" nil "Coyote") "Result = %s(nx, ny, w)" (nil ("help") ("lastseed") ("periodic") ("seed")))
   ("makey" fun nil (lib "loaddata.pro" nil "Coyote") "Result = %s(n, w)" (nil ("help") ("lastseed") ("periodic") ("seed")))
   ("LoadData_ReadData" fun nil (lib "loaddata.pro" nil "Coyote") "Result = %s(number)" (nil))
   ("LoadData_CenterTLB" pro nil (lib "loaddata.pro" nil "Coyote") "%s, tlb" (nil))
   ("LOADDATA_CANCEL" pro nil (lib "loaddata.pro" nil "Coyote") "%s, event" (nil))
   ("LOADDATA_EVENT" pro nil (lib "loaddata.pro" nil "Coyote") "%s, event" (nil))
   ("LOADDATA" fun nil (lib "loaddata.pro" nil "Coyote") "Result = %s(number)" (nil ("CANCEL") ("Group_Leader") ("Images")))
   ("LogScl" fun nil (lib "logscl.pro" nil "Coyote") "Result = %s(image)" (nil ("EXPONENT") ("MAX") ("MEAN") ("MIN") ("NEGATIVE") ("OMAX") ("OMIN")))
   ("Map_GSHHS_Shoreline" pro nil (lib "map_gshhs_shoreline.pro" nil "Coyote") "%s, filename" (nil ("_EXTRA") ("COLOR") ("FILL") ("LAND_COLOR") ("LEVEL") ("MAP_PROJECTION") ("MINAREA") ("OUTLINE") ("WATER_COLOR")))
   ("MPI_Axis_Widget_Events" pro nil (lib "mpi_axis.pro" nil "Coyote") "%s, Event" (nil))
   ("MPI_Axis" fun nil (lib "mpi_axis.pro" nil "Coyote") "Result = %s" (nil ("_Extra") ("Group_Leader") ("Only_Style") ("Only_Tick") ("Short") ("XAxis") ("YAxis")))
   ("MPI_Axis_FindTLB" fun nil (lib "mpi_axis__define.pro" nil "Coyote") "Result = %s(startID)" (nil))
   ("MPI_Axis_CenterTLB" pro nil (lib "mpi_axis__define.pro" nil "Coyote") "%s, tlb" (nil))
   ("MPI_Axis_Error_Message" fun nil (lib "mpi_axis__define.pro" nil "Coyote") "Result = %s(theMessage)" (nil ("_Extra") ("NoName") ("Traceback")))
   ("GetProperty" pro "MPI_Axis" (lib "mpi_axis__define.pro" nil "Coyote") "Obj ->[%s::]%s" (nil ("Name")))
   ("ResizeTLB" pro "MPI_Axis" (lib "mpi_axis__define.pro" nil "Coyote") "Obj ->[%s::]%s" (nil))
   ("GetTLB" fun "MPI_Axis" (lib "mpi_axis__define.pro" nil "Coyote") "Result = Obj ->[%s::]%s" (nil))
   ("GetKeywords" fun "MPI_Axis" (lib "mpi_axis__define.pro" nil "Coyote") "Result = Obj ->[%s::]%s" (nil))
   ("UpdateObject" pro "MPI_Axis" (lib "mpi_axis__define.pro" nil "Coyote") "Obj ->[%s::]%s" (nil))
   ("CheckEvent" fun "MPI_Axis" (lib "mpi_axis__define.pro" nil "Coyote") "Result = Obj ->[%s::]%s(event)" (nil))
   ("LowRange" fun "MPI_Axis" (lib "mpi_axis__define.pro" nil "Coyote") "Result = Obj ->[%s::]%s(event)" (nil))
   ("HighRange" fun "MPI_Axis" (lib "mpi_axis__define.pro" nil "Coyote") "Result = Obj ->[%s::]%s(event)" (nil))
   ("ResetRange" fun "MPI_Axis" (lib "mpi_axis__define.pro" nil "Coyote") "Result = Obj ->[%s::]%s(event)" (nil))
   ("AxisTitle" fun "MPI_Axis" (lib "mpi_axis__define.pro" nil "Coyote") "Result = Obj ->[%s::]%s(event)" (nil))
   ("AxisThickness" fun "MPI_Axis" (lib "mpi_axis__define.pro" nil "Coyote") "Result = Obj ->[%s::]%s(event)" (nil))
   ("MajorTicks" fun "MPI_Axis" (lib "mpi_axis__define.pro" nil "Coyote") "Result = Obj ->[%s::]%s(event)" (nil))
   ("TickLength" fun "MPI_Axis" (lib "mpi_axis__define.pro" nil "Coyote") "Result = Obj ->[%s::]%s(event)" (nil))
   ("CharSize" fun "MPI_Axis" (lib "mpi_axis__define.pro" nil "Coyote") "Result = Obj ->[%s::]%s(event)" (nil))
   ("MinorTicks" fun "MPI_Axis" (lib "mpi_axis__define.pro" nil "Coyote") "Result = Obj ->[%s::]%s(event)" (nil))
   ("TickFormat" fun "MPI_Axis" (lib "mpi_axis__define.pro" nil "Coyote") "Result = Obj ->[%s::]%s(event)" (nil))
   ("GridStyle" fun "MPI_Axis" (lib "mpi_axis__define.pro" nil "Coyote") "Result = Obj ->[%s::]%s(event)" (nil))
   ("SetExactStyle" fun "MPI_Axis" (lib "mpi_axis__define.pro" nil "Coyote") "Result = Obj ->[%s::]%s(event)" (nil))
   ("SetExtendStyle" fun "MPI_Axis" (lib "mpi_axis__define.pro" nil "Coyote") "Result = Obj ->[%s::]%s(event)" (nil))
   ("SetHideStyle" fun "MPI_Axis" (lib "mpi_axis__define.pro" nil "Coyote") "Result = Obj ->[%s::]%s(event)" (nil))
   ("SetBoxStyle" fun "MPI_Axis" (lib "mpi_axis__define.pro" nil "Coyote") "Result = Obj ->[%s::]%s(event)" (nil))
   ("SetZeroStyle" fun "MPI_Axis" (lib "mpi_axis__define.pro" nil "Coyote") "Result = Obj ->[%s::]%s(event)" (nil))
   ("SetLogStyle" fun "MPI_Axis" (lib "mpi_axis__define.pro" nil "Coyote") "Result = Obj ->[%s::]%s(event)" (nil))
   ("TickOptions" fun "MPI_Axis" (lib "mpi_axis__define.pro" nil "Coyote") "Result = Obj ->[%s::]%s(event)" (nil))
   ("DismissDialog" fun "MPI_Axis" (lib "mpi_axis__define.pro" nil "Coyote") "Result = Obj ->[%s::]%s(event)" (nil))
   ("AcceptTickOptions" fun "MPI_Axis" (lib "mpi_axis__define.pro" nil "Coyote") "Result = Obj ->[%s::]%s(event)" (nil))
   ("StyleOptions" fun "MPI_Axis" (lib "mpi_axis__define.pro" nil "Coyote") "Result = Obj ->[%s::]%s(event)" (nil))
   ("MPI_Axis_Widget_Events" fun nil (lib "mpi_axis__define.pro" nil "Coyote") "Result = %s(event)" (nil))
   ("GUI" fun "MPI_Axis" (lib "mpi_axis__define.pro" nil "Coyote") "Result = Obj ->[%s::]%s(parent)" (nil ("Defaultfont") ("Event_Func") ("Event_Pro") ("LabelFont") ("Only_Style") ("Only_Tick") ("Short_Form") ("UValue")))
   ("SetProperty" pro "MPI_Axis" (lib "mpi_axis__define.pro" nil "Coyote") "Obj ->[%s::]%s" (nil ("AutoKeywords") ("AutoRange") ("Charsize") ("Defaultfont") ("Exact") ("Extend") ("Gridstyle") ("Hide") ("LabelFont") ("Log") ("Margin") ("Minor") ("Name") ("NoBox") ("NoZero") ("Range") ("Style") ("Thick") ("Tickformat") ("Tickinterval") ("Ticklayout") ("Ticklen") ("Tickname") ("Ticks") ("Tickunits") ("Tickv") ("Title") ("XAxis") ("YAxis") ("ZAxis")))
   ("Init" fun "MPI_Axis" (lib "mpi_axis__define.pro" nil "Coyote") "Result = Obj ->[%s::]%s" (nil ("AutoKeywords") ("AutoRange") ("Charsize") ("Exact") ("Extend") ("Gridstyle") ("Hide") ("Log") ("Margin") ("Minor") ("Name") ("NoBox") ("NoZero") ("Range") ("Style") ("Thick") ("Tickformat") ("Tickinterval") ("Ticklayout") ("Ticklen") ("Tickname") ("Ticks") ("Tickunits") ("Tickv") ("Title") ("XAxis") ("YAxis") ("ZAxis")))
   ("Cleanup" pro "MPI_Axis" (lib "mpi_axis__define.pro" nil "Coyote") "Obj ->[%s::]%s" (nil))
   ("MPI_Axis_Notify_Realize" pro nil (lib "mpi_axis__define.pro" nil "Coyote") "%s, tlb" (nil))
   ("MPI_Axis_GetValue" fun nil (lib "mpi_axis__define.pro" nil "Coyote") "Result = %s(id)" (nil))
   ("MPI_Axis_SetValue" pro nil (lib "mpi_axis__define.pro" nil "Coyote") "%s, value" (nil))
   ("MPI_Axis__Define" pro nil (lib "mpi_axis__define.pro" nil "Coyote") "%s" (nil))
   ("MPI_Overplot__Define" pro nil (lib "mpi_plot.pro" nil "Coyote") "%s" (nil))
   ("MPI_Plot_Clear_Overplots" pro nil (lib "mpi_plot.pro" nil "Coyote") "%s, event" (nil))
   ("MPI_Plot_DrawThePlot" pro nil (lib "mpi_plot.pro" nil "Coyote") "%s, infoptr" (nil ("Overplot")))
   ("MPI_Plot_PostScript" pro nil (lib "mpi_plot.pro" nil "Coyote") "%s, event" (nil))
   ("MPI_Plot_Print" pro nil (lib "mpi_plot.pro" nil "Coyote") "%s, event" (nil))
   ("MPI_Plot_SaveAs" pro nil (lib "mpi_plot.pro" nil "Coyote") "%s, event" (nil))
   ("MPI_Plot_Quit" pro nil (lib "mpi_plot.pro" nil "Coyote") "%s, event" (nil))
   ("MPI_Plot_Cleanup" pro nil (lib "mpi_plot.pro" nil "Coyote") "%s, tlb" (nil))
   ("MPI_Plot_Configure_Button" pro nil (lib "mpi_plot.pro" nil "Coyote") "%s, event" (nil))
   ("MPI_Plot_Resize" pro nil (lib "mpi_plot.pro" nil "Coyote") "%s, event" (nil))
   ("MPI_Plot_Configuration_Events" pro nil (lib "mpi_plot.pro" nil "Coyote") "%s, event" (nil))
   ("MPI_Plot" pro nil (lib "mpi_plot.pro" nil "Coyote") "%s, x, y" (nil ("_Extra") ("Color") ("DataColor") ("Overplot") ("PSym") ("Title") ("XLog") ("XTitle") ("YLog") ("YTitle")))
   ("MPI_PlotConfig_CenterTLB" pro nil (lib "mpi_plotconfig__define.pro" nil "Coyote") "%s, tlb" (nil))
   ("MPI_PlotConfig_Error_Message" fun nil (lib "mpi_plotconfig__define.pro" nil "Coyote") "Result = %s(theMessage)" (nil ("_Extra") ("NoName") ("Traceback")))
   ("Symbol" fun "MPI_PlotConfig" (lib "mpi_plotconfig__define.pro" nil "Coyote") "Result = Obj ->[%s::]%s(number)" (nil))
   ("AxisObjectEvents" fun "MPI_PlotConfig" (lib "mpi_plotconfig__define.pro" nil "Coyote") "Result = Obj ->[%s::]%s(event)" (nil))
   ("SetPlotKeywords" pro "MPI_PlotConfig" (lib "mpi_plotconfig__define.pro" nil "Coyote") "Obj ->[%s::]%s, plotkeywords" (nil))
   ("Destroy" pro "MPI_PlotConfig" (lib "mpi_plotconfig__define.pro" nil "Coyote") "Obj ->[%s::]%s" (nil))
   ("GetTLB" fun "MPI_PlotConfig" (lib "mpi_plotconfig__define.pro" nil "Coyote") "Result = Obj ->[%s::]%s" (nil))
   ("SendEvent" pro "MPI_PlotConfig" (lib "mpi_plotconfig__define.pro" nil "Coyote") "Obj ->[%s::]%s" (nil))
   ("GetKeywords" fun "MPI_PlotConfig" (lib "mpi_plotconfig__define.pro" nil "Coyote") "Result = Obj ->[%s::]%s" (nil))
   ("UpdateObject" pro "MPI_PlotConfig" (lib "mpi_plotconfig__define.pro" nil "Coyote") "Obj ->[%s::]%s" (nil))
   ("CheckEvent" fun "MPI_PlotConfig" (lib "mpi_plotconfig__define.pro" nil "Coyote") "Result = Obj ->[%s::]%s(event)" (nil))
   ("SetPlotPosition" fun "MPI_PlotConfig" (lib "mpi_plotconfig__define.pro" nil "Coyote") "Result = Obj ->[%s::]%s(event)" (nil))
   ("SetTitle" fun "MPI_PlotConfig" (lib "mpi_plotconfig__define.pro" nil "Coyote") "Result = Obj ->[%s::]%s(event)" (nil))
   ("SetSubTitle" fun "MPI_PlotConfig" (lib "mpi_plotconfig__define.pro" nil "Coyote") "Result = Obj ->[%s::]%s(event)" (nil))
   ("SetFont" fun "MPI_PlotConfig" (lib "mpi_plotconfig__define.pro" nil "Coyote") "Result = Obj ->[%s::]%s(event)" (nil))
   ("SetLinestyle" fun "MPI_PlotConfig" (lib "mpi_plotconfig__define.pro" nil "Coyote") "Result = Obj ->[%s::]%s(event)" (nil))
   ("SetSymbol" fun "MPI_PlotConfig" (lib "mpi_plotconfig__define.pro" nil "Coyote") "Result = Obj ->[%s::]%s(event)" (nil))
   ("SetBackgroundColor" fun "MPI_PlotConfig" (lib "mpi_plotconfig__define.pro" nil "Coyote") "Result = Obj ->[%s::]%s(event)" (nil))
   ("SetColor" fun "MPI_PlotConfig" (lib "mpi_plotconfig__define.pro" nil "Coyote") "Result = Obj ->[%s::]%s(event)" (nil))
   ("SetDataColor" fun "MPI_PlotConfig" (lib "mpi_plotconfig__define.pro" nil "Coyote") "Result = Obj ->[%s::]%s(event)" (nil))
   ("SetLineThick" fun "MPI_PlotConfig" (lib "mpi_plotconfig__define.pro" nil "Coyote") "Result = Obj ->[%s::]%s(event)" (nil))
   ("SetCharThick" fun "MPI_PlotConfig" (lib "mpi_plotconfig__define.pro" nil "Coyote") "Result = Obj ->[%s::]%s(event)" (nil))
   ("SetSymSize" fun "MPI_PlotConfig" (lib "mpi_plotconfig__define.pro" nil "Coyote") "Result = Obj ->[%s::]%s(event)" (nil))
   ("SetCharSize" fun "MPI_PlotConfig" (lib "mpi_plotconfig__define.pro" nil "Coyote") "Result = Obj ->[%s::]%s(event)" (nil))
   ("SymbolWithLine" fun "MPI_PlotConfig" (lib "mpi_plotconfig__define.pro" nil "Coyote") "Result = Obj ->[%s::]%s(event)" (nil))
   ("SetTickLen" fun "MPI_PlotConfig" (lib "mpi_plotconfig__define.pro" nil "Coyote") "Result = Obj ->[%s::]%s(event)" (nil))
   ("DismissDialog" fun "MPI_PlotConfig" (lib "mpi_plotconfig__define.pro" nil "Coyote") "Result = Obj ->[%s::]%s(event)" (nil))
   ("AcceptDialog" fun "MPI_PlotConfig" (lib "mpi_plotconfig__define.pro" nil "Coyote") "Result = Obj ->[%s::]%s(event)" (nil))
   ("ApplyDialog" fun "MPI_PlotConfig" (lib "mpi_plotconfig__define.pro" nil "Coyote") "Result = Obj ->[%s::]%s(event)" (nil))
   ("GUI" pro "MPI_PlotConfig" (lib "mpi_plotconfig__define.pro" nil "Coyote") "Obj ->[%s::]%s" (nil ("All_events") ("Block") ("Defaultfont") ("Group_Leader") ("LabelDefaultSize") ("LabelFont") ("NotifyID") ("XLongForm") ("YLongForm")))
   ("SetProperty" pro "MPI_PlotConfig" (lib "mpi_plotconfig__define.pro" nil "Coyote") "Obj ->[%s::]%s" (nil ("Background") ("Charsize") ("Charthick") ("Color") ("Datacolor") ("Font") ("Linestyle") ("NoAxisInfo") ("Position") ("PSym") ("Subtitle") ("Symsize") ("Thick") ("Ticklen") ("Title") ("UseDataColor") ("XAxis") ("YAxis")))
   ("Init" fun "MPI_PlotConfig" (lib "mpi_plotconfig__define.pro" nil "Coyote") "Result = Obj ->[%s::]%s" (nil ("_Extra") ("Background") ("Charsize") ("Charthick") ("Color") ("Datacolor") ("Font") ("Linestyle") ("NoAxisInfo") ("Position") ("PSym") ("Subtitle") ("Symsize") ("Thick") ("Ticklen") ("Title") ("UseDataColor") ("XAxis") ("YAxis")))
   ("MPI_PlotConfig_GetValue" fun nil (lib "mpi_plotconfig__define.pro" nil "Coyote") "Result = %s(id)" (nil))
   ("MPI_PlotConfig_SetValue" pro nil (lib "mpi_plotconfig__define.pro" nil "Coyote") "%s, value" (nil))
   ("MPI_PlotConfig_Widget_Events" pro nil (lib "mpi_plotconfig__define.pro" nil "Coyote") "%s, event" (nil))
   ("Cleanup" pro "MPI_PlotConfig" (lib "mpi_plotconfig__define.pro" nil "Coyote") "Obj ->[%s::]%s" (nil))
   ("MPI_PlotConfig__Define" pro nil (lib "mpi_plotconfig__define.pro" nil "Coyote") "%s" (nil))
   ("Normalize" fun nil (lib "normalize.pro" nil "Coyote") "Result = %s(range)" (nil ("Position")))
   ("Normalize" fun nil (lib "object_shade_surf.pro" nil "Coyote") "Result = %s(range)" (nil ("Position")))
   ("Object_Shade_Surf_Cleanup" pro nil (lib "object_shade_surf.pro" nil "Coyote") "%s, tlb" (nil))
   ("Object_Shade_Surf_Draw_Events" pro nil (lib "object_shade_surf.pro" nil "Coyote") "%s, event" (nil))
   ("Object_Shade_Surf_Resize" pro nil (lib "object_shade_surf.pro" nil "Coyote") "%s, event" (nil))
   ("Object_Shade_Surf_Style" pro nil (lib "object_shade_surf.pro" nil "Coyote") "%s, event" (nil))
   ("Object_Shade_Surf_Exit" pro nil (lib "object_shade_surf.pro" nil "Coyote") "%s, event" (nil))
   ("Object_Shade_Surf" pro nil (lib "object_shade_surf.pro" nil "Coyote") "%s, data, x, y" (nil ("Style")))
   ("PickColor_CenterTLB" pro nil (lib "pickcolor.pro" nil "Coyote") "%s, tlb" (nil))
   ("PickColor_Select_Color" pro nil (lib "pickcolor.pro" nil "Coyote") "%s, event" (nil))
   ("PickColor_Sliders" pro nil (lib "pickcolor.pro" nil "Coyote") "%s, event" (nil))
   ("PickColor_Buttons" pro nil (lib "pickcolor.pro" nil "Coyote") "%s, event" (nil))
   ("PickColor" fun nil (lib "pickcolor.pro" nil "Coyote") "Result = %s(currentColorIndex)" (nil ("Cancel") ("CurrentColor") ("Group_Leader") ("Names") ("StartIndex") ("Title")))
   ("PrecipMap_Annotate" fun nil (lib "precipmap.pro" nil "Coyote") "Result = %s(axis, index, value)" (nil))
   ("PrecipMap" pro nil (lib "precipmap.pro" nil "Coyote") "%s, filename" (nil))
   ("PRINTWINDOW_PSWINDOW_ASPECT" fun nil (lib "printwindow.pro" nil "Coyote") "Result = %s(aspectRatio)" (nil ("MARGIN") ("WindowAspect")))
   ("PRINTWINDOW_PSWINDOW" fun nil (lib "printwindow.pro" nil "Coyote") "Result = %s" (nil ("CM") ("Fudge") ("LANDSCAPE") ("MARGIN") ("PageSize") ("Printer") ("XFudge") ("YFudge")))
   ("PrintWindow_Error" fun nil (lib "printwindow.pro" nil "Coyote") "Result = %s(theMessage)" (nil ("NoName") ("Traceback")))
   ("PrintWindow" pro nil (lib "printwindow.pro" nil "Coyote") "%s, wid" (nil ("Landscape") ("PageSize") ("RGB_Error")))
   ("ProgramRootDir" fun nil (lib "programrootdir.pro" nil "Coyote") "Result = %s" (nil ("NoMark") ("OneUp") ("TwoUp")))
   ("Read_TOMS_Aerosol" pro nil (lib "read_toms_aerosol.pro" nil "Coyote") "%s, filename" (nil ("DATA") ("HEADER") ("LIMIT") ("PS")))
   ("Normalize" fun nil (lib "reverse_axes.pro" nil "Coyote") "Result = %s(range)" (nil ("Position")))
   ("Reverse_Axes_Cleanup" pro nil (lib "reverse_axes.pro" nil "Coyote") "%s, tlb" (nil))
   ("Reverse_Axes_Draw_Events" pro nil (lib "reverse_axes.pro" nil "Coyote") "%s, event" (nil))
   ("Reverse_Axes_Style" pro nil (lib "reverse_axes.pro" nil "Coyote") "%s, event" (nil))
   ("Reverse_Axes_AxisRotation" pro nil (lib "reverse_axes.pro" nil "Coyote") "%s, event" (nil))
   ("Reverse_Axes_Output" pro nil (lib "reverse_axes.pro" nil "Coyote") "%s, event" (nil))
   ("Reverse_Axes_Exit" pro nil (lib "reverse_axes.pro" nil "Coyote") "%s, event" (nil))
   ("Reverse_Axes_Printing" pro nil (lib "reverse_axes.pro" nil "Coyote") "%s, event" (nil))
   ("Reverse_Axes_Resize" pro nil (lib "reverse_axes.pro" nil "Coyote") "%s, event" (nil))
   ("Reverse_Axes" pro nil (lib "reverse_axes.pro" nil "Coyote") "%s, data, x, y" (nil ("_Extra") ("Exact") ("Group_Leader") ("Hidden_Lines") ("Landscape") ("Vector") ("XTitle") ("YTitle") ("ZTitle")))
   ("Select_Button_Events" pro nil (lib "select_objects.pro" nil "Coyote") "%s, event" (nil))
   ("Select_Cleanup" pro nil (lib "select_objects.pro" nil "Coyote") "%s, tlb" (nil))
   ("Select_Resize" pro nil (lib "select_objects.pro" nil "Coyote") "%s, event" (nil))
   ("Select_Objects" pro nil (lib "select_objects.pro" nil "Coyote") "%s" (nil))
   ("ShapeInfo_Events" pro nil (lib "shapeinfo.pro" nil "Coyote") "%s, event" (nil))
   ("ShapeInfo_Cleanup" pro nil (lib "shapeinfo.pro" nil "Coyote") "%s, tlb" (nil))
   ("ShapeInfo" pro nil (lib "shapeinfo.pro" nil "Coyote") "%s, filename" (nil))
   ("Simple_Surface_Cleanup" pro nil (lib "simple_surface.pro" nil "Coyote") "%s, tlb" (nil))
   ("Simple_Surface_Draw_Events" pro nil (lib "simple_surface.pro" nil "Coyote") "%s, event" (nil))
   ("Simple_Surface_Style" pro nil (lib "simple_surface.pro" nil "Coyote") "%s, event" (nil))
   ("Simple_Surface_Output" pro nil (lib "simple_surface.pro" nil "Coyote") "%s, event" (nil))
   ("Simple_Surface_Exit" pro nil (lib "simple_surface.pro" nil "Coyote") "%s, event" (nil))
   ("Simple_Surface_Printing" pro nil (lib "simple_surface.pro" nil "Coyote") "%s, event" (nil))
   ("Simple_Surface_Resize" pro nil (lib "simple_surface.pro" nil "Coyote") "%s, event" (nil))
   ("Simple_Surface" pro nil (lib "simple_surface.pro" nil "Coyote") "%s, data, x, y" (nil ("_Extra") ("Exact") ("Group_Leader") ("Hidden_Lines") ("Landscape") ("Vector") ("XTitle") ("YTitle") ("ZTitle")))
   ("sort_nd" fun nil (lib "sort_nd.pro" nil "Coyote") "Result = %s(array, dimension)" (nil))
   ("StationPlot" pro nil (lib "stationplot.pro" nil "Coyote") "%s, xc, yc" (nil ("Color") ("Radius") ("Thick")))
   ("STR_SIZE" fun nil (lib "str_size.pro" nil "Coyote") "Result = %s(theString, targetWidth)" (nil ("INITSIZE") ("STEP") ("XPOS") ("YPOS")))
   ("SymCat" fun nil (lib "symcat.pro" nil "Coyote") "Result = %s(theSymbol)" (nil))
   ("Terminator_Map" pro nil (lib "terminator_map.pro" nil "Coyote") "%s, center_lon, center_lat" (nil ("FlipDay") ("Image") ("Keep_Aspect") ("Map_Projection") ("Time")))
   ("TEXTLINEFORMAT" fun nil (lib "textlineformat.pro" nil "Coyote") "Result = %s(theText)" (nil ("LENGTH")))
   ("Normalize" fun nil (lib "texture_surface.pro" nil "Coyote") "Result = %s(range)" (nil ("Position")))
   ("ImageDimensions" fun nil (lib "texture_surface.pro" nil "Coyote") "Result = %s(image)" (nil ("TrueIndex") ("XIndex") ("XSize") ("YIndex") ("YSize")))
   ("Texture_Surface_Cleanup" pro nil (lib "texture_surface.pro" nil "Coyote") "%s, tlb" (nil))
   ("Texture_Surface_Draw_Events" pro nil (lib "texture_surface.pro" nil "Coyote") "%s, event" (nil))
   ("Texture_Surface_Style" pro nil (lib "texture_surface.pro" nil "Coyote") "%s, event" (nil))
   ("Texture_Surface_Output" pro nil (lib "texture_surface.pro" nil "Coyote") "%s, event" (nil))
   ("Texture_Surface_Exit" pro nil (lib "texture_surface.pro" nil "Coyote") "%s, event" (nil))
   ("Texture_Surface_Printing" pro nil (lib "texture_surface.pro" nil "Coyote") "%s, event" (nil))
   ("Texture_Surface_Resize" pro nil (lib "texture_surface.pro" nil "Coyote") "%s, event" (nil))
   ("Texture_Surface" pro nil (lib "texture_surface.pro" nil "Coyote") "%s, surfaceData, x, y" (nil ("_Extra") ("BorderColor") ("Colortable") ("Exact") ("Group_Leader") ("Hidden_Lines") ("Image") ("Landscape") ("Position") ("Vector") ("XTitle") ("YTitle") ("ZScale") ("ZTitle")))
   ("Transform_Volume" fun nil (lib "transform_volume.pro" nil "Coyote") "Result = %s(volume)" (nil ("Buffer_Size") ("Centre_Rotation") ("Missing") ("Rotation") ("Scale") ("T3Dmat") ("Translate")))
   ("TVIMAGE_CONGRID" fun nil (lib "tvimage.pro" nil "Coyote") "Result = %s(arr, x, y, z)" (nil ("Cubic") ("Half_Half") ("Interp") ("Minus_One")))
   ("TVIMAGE_ERROR" fun nil (lib "tvimage.pro" nil "Coyote") "Result = %s(theMessage)" (nil ("_Extra") ("NoName") ("Traceback")))
   ("TVIMAGE" pro nil (lib "tvimage.pro" nil "Coyote") "%s, image, x, y" (nil ("_EXTRA") ("BACKGROUND") ("ERASE") ("HALF_HALF") ("KEEP_ASPECT_RATIO") ("MARGIN") ("MINUS_ONE") ("NOINTERPOLATION") ("NORMAL") ("OVERPLOT") ("POSITION") ("TV")))
   ("TVREAD_ERROR_MESSAGE" fun nil (lib "tvread.pro" nil "Coyote") "Result = %s(theMessage)" (nil ("_Extra") ("NoName") ("Traceback")))
   ("TVREAD" fun nil (lib "tvread.pro" nil "Coyote") "Result = %s(xstart, ystart, ncols, nrows)" (nil ("_Extra") ("BMP") ("Cancel") ("Colors") ("Cube") ("Dither") ("Filename") ("GIF") ("JPEG") ("NoDialog") ("Order") ("PICT") ("PNG") ("Quality") ("TIFF") ("True") ("TYPE") ("WID")))
   ("TVSCALE_CONGRID" fun nil (lib "tvscale.pro" nil "Coyote") "Result = %s(arr, x, y, z)" (nil ("Cubic") ("Half_Half") ("Interp") ("Minus_One")))
   ("TVSCALE_ERROR" fun nil (lib "tvscale.pro" nil "Coyote") "Result = %s(theMessage)" (nil ("_Extra") ("NoName") ("Traceback")))
   ("TVSCALE" pro nil (lib "tvscale.pro" nil "Coyote") "%s, image, x, y" (nil ("_EXTRA") ("BACKGROUND") ("BOTTOM") ("ERASE") ("KEEP_ASPECT_RATIO") ("MARGIN") ("MAXValue") ("MINUS_ONE") ("MINValue") ("NCOLORS") ("NOINTERPOLATION") ("NORMAL") ("POSITION") ("TOP") ("TVSCL")))
   ("UNDEFINE" pro nil (lib "undefine.pro" nil "Coyote") "%s, varname" (nil))
   ("Normalize" fun nil (lib "vcolorbar__define.pro" nil "Coyote") "Result = %s(range)" (nil ("Position")))
   ("Clamp" pro "VColorBar" (lib "vcolorbar__define.pro" nil "Coyote") "Obj ->[%s::]%s, datarange" (nil))
   ("INIT" fun "VColorBar" (lib "vcolorbar__define.pro" nil "Coyote") "Result = Obj ->[%s::]%s" (nil ("_Extra") ("Color") ("Major") ("Minor") ("Name") ("NColors") ("Palette") ("Position") ("Range") ("Title")))
   ("Cleanup" pro "VColorBar" (lib "vcolorbar__define.pro" nil "Coyote") "Obj ->[%s::]%s" (nil))
   ("GetProperty" pro "VColorBar" (lib "vcolorbar__define.pro" nil "Coyote") "Obj ->[%s::]%s" (nil ("_Ref_Extra") ("Color") ("Major") ("Minor") ("Name") ("Palette") ("Position") ("Range") ("Text") ("Title") ("Transform")))
   ("SetProperty" pro "VColorBar" (lib "vcolorbar__define.pro" nil "Coyote") "Obj ->[%s::]%s" (nil ("_Extra") ("Color") ("Major") ("Minor") ("Name") ("Palette") ("Position") ("Range") ("Title") ("Transform")))
   ("VColorBar__Define" pro nil (lib "vcolorbar__define.pro" nil "Coyote") "%s" (nil))
   ("Windbarb" pro nil (lib "windbarb.pro" nil "Coyote") "%s, x, y, wspeed, wdirection" (nil ("Aspect") ("Clip") ("Color") ("Length") ("Map_Rotation") ("Southern_Hemisphere") ("Station") ("Thick")))
   ("WindowAvailable" fun nil (lib "windowavailable.pro" nil "Coyote") "Result = %s(windowID)" (nil))
   ("WindowImage_Resize" pro nil (lib "windowimage.pro" nil "Coyote") "%s, event" (nil))
   ("WindowImage_OriginalSettings" pro nil (lib "windowimage.pro" nil "Coyote") "%s, event" (nil))
   ("WindowImage_Quit" pro nil (lib "windowimage.pro" nil "Coyote") "%s, event" (nil))
   ("WindowImage_Cleanup" pro nil (lib "windowimage.pro" nil "Coyote") "%s, tlb" (nil))
   ("WindowImage_DrawEvents" pro nil (lib "windowimage.pro" nil "Coyote") "%s, event" (nil))
   ("WindowImage" pro nil (lib "windowimage.pro" nil "Coyote") "%s, image" (nil ("Colortable") ("Level") ("Width")))
   ("init" fun "dirlisting" (lib "xcd.pro" nil "Coyote") "Result = Obj ->[%s::]%s(location)" (nil))
   ("cleanup" pro "dirlisting" (lib "xcd.pro" nil "Coyote") "Obj ->[%s::]%s" (nil))
   ("dirlisting__define" pro nil (lib "xcd.pro" nil "Coyote") "%s" (nil))
   ("SubdirNames" fun "dirlisting" (lib "xcd.pro" nil "Coyote") "Result = Obj ->[%s::]%s" (nil))
   ("FileNames" fun "dirlisting" (lib "xcd.pro" nil "Coyote") "Result = Obj ->[%s::]%s" (nil))
   ("Path" fun "dirlisting" (lib "xcd.pro" nil "Coyote") "Result = Obj ->[%s::]%s" (nil))
   ("Drive" fun "dirlisting" (lib "xcd.pro" nil "Coyote") "Result = Obj ->[%s::]%s" (nil))
   ("handle" pro "xcd" (lib "xcd.pro" nil "Coyote") "Obj ->[%s::]%s, event" (nil))
   ("xcd_cleanup" pro nil (lib "xcd.pro" nil "Coyote") "%s, tlb" (nil))
   ("cleanup" pro "xcd" (lib "xcd.pro" nil "Coyote") "Obj ->[%s::]%s" (nil))
   ("xcd_event" pro nil (lib "xcd.pro" nil "Coyote") "%s, event" (nil))
   ("update" pro "xcd" (lib "xcd.pro" nil "Coyote") "Obj ->[%s::]%s" (nil))
   ("init" fun "xcd" (lib "xcd.pro" nil "Coyote") "Result = Obj ->[%s::]%s" (nil))
   ("xcd__define" pro nil (lib "xcd.pro" nil "Coyote") "%s" (nil))
   ("xcd" pro nil (lib "xcd.pro" nil "Coyote") "%s" (nil))
   ("XColors_Congrid" fun nil (lib "xcolors.pro" nil "Coyote") "Result = %s(arr, x, y, z)" (nil ("CUBIC") ("INTERP") ("MINUS_ONE")))
   ("XColors_NotifyObj__Define" pro nil (lib "xcolors.pro" nil "Coyote") "%s" (nil))
   ("XColors_Set" pro nil (lib "xcolors.pro" nil "Coyote") "%s, info" (nil))
   ("XCOLORS_TOP_SLIDER" pro nil (lib "xcolors.pro" nil "Coyote") "%s, event" (nil))
   ("XCOLORS_BOTTOM_SLIDER" pro nil (lib "xcolors.pro" nil "Coyote") "%s, event" (nil))
   ("XCOLORS_GAMMA_SLIDER" pro nil (lib "xcolors.pro" nil "Coyote") "%s, event" (nil))
   ("XCOLORS_COLORTABLE" pro nil (lib "xcolors.pro" nil "Coyote") "%s, event" (nil))
   ("XCOLORS_PROTECT_COLORS" pro nil (lib "xcolors.pro" nil "Coyote") "%s, event" (nil))
   ("XCOLORS_CANCEL" pro nil (lib "xcolors.pro" nil "Coyote") "%s, event" (nil))
   ("XCOLORS_DISMISS" pro nil (lib "xcolors.pro" nil "Coyote") "%s, event" (nil))
   ("XCOLORS_CLEANUP" pro nil (lib "xcolors.pro" nil "Coyote") "%s, tlb" (nil))
   ("XCOLORS" pro nil (lib "xcolors.pro" nil "Coyote") "%s" (nil ("_Extra") ("Block") ("Bottom") ("ColorInfo") ("Data") ("Drag") ("File") ("Group_Leader") ("Index") ("Modal") ("NColors") ("NoSliders") ("NotifyID") ("NotifyObj") ("NotifyPro") ("Title") ("XOffset") ("YOffset")))
   ("INIT" fun "VColorBar" (lib "xcontour.pro" nil "Coyote") "Result = Obj ->[%s::]%s" (nil ("_Extra") ("Color") ("Major") ("Minor") ("Name") ("NColors") ("Palette") ("Position") ("Range") ("Title")))
   ("Cleanup" pro "VColorBar" (lib "xcontour.pro" nil "Coyote") "Obj ->[%s::]%s" (nil))
   ("GetProperty" pro "VColorBar" (lib "xcontour.pro" nil "Coyote") "Obj ->[%s::]%s" (nil ("_Ref_Extra") ("Color") ("Major") ("Minor") ("Name") ("Palette") ("Position") ("Range") ("Text") ("Title") ("Transform")))
   ("SetProperty" pro "VColorBar" (lib "xcontour.pro" nil "Coyote") "Obj ->[%s::]%s" (nil ("_Extra") ("Color") ("Major") ("Minor") ("Name") ("Palette") ("Position") ("Range") ("Title") ("Transform")))
   ("VColorBar__Define" pro nil (lib "xcontour.pro" nil "Coyote") "%s" (nil))
   ("XContour_Cleanup" pro nil (lib "xcontour.pro" nil "Coyote") "%s, tlb" (nil))
   ("XContour_Draw_Events" pro nil (lib "xcontour.pro" nil "Coyote") "%s, event" (nil))
   ("XContour_Properties" pro nil (lib "xcontour.pro" nil "Coyote") "%s, event" (nil))
   ("XContour_Output" pro nil (lib "xcontour.pro" nil "Coyote") "%s, event" (nil))
   ("XContour_Exit" pro nil (lib "xcontour.pro" nil "Coyote") "%s, event" (nil))
   ("XContour_Printing" pro nil (lib "xcontour.pro" nil "Coyote") "%s, event" (nil))
   ("XContour_Resize" pro nil (lib "xcontour.pro" nil "Coyote") "%s, event" (nil))
   ("XContour" pro nil (lib "xcontour.pro" nil "Coyote") "%s, data, x, y" (nil ("_Extra") ("CBarTitle") ("Group_Leader") ("NLevels") ("Title") ("XTitle") ("YTitle")))
   ("XMOVIE_CLEANUP" pro nil (lib "xmovie.pro" nil "Coyote") "%s, tlb" (nil))
   ("XMOVIE_DELAY_EVENTS" pro nil (lib "xmovie.pro" nil "Coyote") "%s, event" (nil))
   ("XMOVIE_EVENT" pro nil (lib "xmovie.pro" nil "Coyote") "%s, event" (nil))
   ("XMOVIE" pro nil (lib "xmovie.pro" nil "Coyote") "%s, data" (nil ("GROUP") ("TITLE")))
   ("XPlot_Aspect" fun nil (lib "xplot.pro" nil "Coyote") "Result = %s(aspectRatio)" (nil ("MARGIN") ("WindowAspect")))
   ("XPlot_Output" pro nil (lib "xplot.pro" nil "Coyote") "%s, event" (nil))
   ("XPlot_Exit" pro nil (lib "xplot.pro" nil "Coyote") "%s, event" (nil))
   ("XPlot_Printing" pro nil (lib "xplot.pro" nil "Coyote") "%s, event" (nil))
   ("Xplot_Cleanup" pro nil (lib "xplot.pro" nil "Coyote") "%s, id" (nil))
   ("XPlot_Draw_Widget_Events" pro nil (lib "xplot.pro" nil "Coyote") "%s, event" (nil))
   ("XPlot_Resize_Events" pro nil (lib "xplot.pro" nil "Coyote") "%s, event" (nil))
   ("XPlot_ColorSchemes" pro nil (lib "xplot.pro" nil "Coyote") "%s, event" (nil))
   ("XPlot_Linestyle" pro nil (lib "xplot.pro" nil "Coyote") "%s, event" (nil))
   ("XPlot_Symbol" pro nil (lib "xplot.pro" nil "Coyote") "%s, event" (nil))
   ("XPlot_SymbolSize" pro nil (lib "xplot.pro" nil "Coyote") "%s, event" (nil))
   ("XPlot" pro nil (lib "xplot.pro" nil "Coyote") "%s, xx, yy" (nil ("_Extra") ("ColorPrint") ("Exact") ("Group_Leader") ("Landscape") ("Position") ("PSym") ("SymSize") ("Title") ("Vector") ("XTitle") ("YTitle")))
   ("XSTRETCH_SCALEIMAGE" fun nil (lib "xstretch.pro" nil "Coyote") "Result = %s(info)" (nil))
   ("XSTRETCH_VALIDATE_THRESHOLD" fun nil (lib "xstretch.pro" nil "Coyote") "Result = %s(threshold, info)" (nil))
   ("XSTRETCH_IMAGEWINDOWKILLED" pro nil (lib "xstretch.pro" nil "Coyote") "%s, imageWindowID" (nil))
   ("XSTRETCH_SAVETOMAIN" pro nil (lib "xstretch.pro" nil "Coyote") "%s, event" (nil))
   ("XSTRETCH_DRAWLINES" pro nil (lib "xstretch.pro" nil "Coyote") "%s, minThresh, maxThresh, info" (nil))
   ("XSTRETCH_NOTIFYOTHERS" pro nil (lib "xstretch.pro" nil "Coyote") "%s, info" (nil))
   ("XSTRETCH_HISTOPLOT" pro nil (lib "xstretch.pro" nil "Coyote") "%s, image" (nil ("_Extra") ("Colors") ("MAXVALUE") ("WID")))
   ("XSTRETCH_PARAMETERS" pro nil (lib "xstretch.pro" nil "Coyote") "%s, event" (nil))
   ("XSTRETCH_FLIPIMAGE" pro nil (lib "xstretch.pro" nil "Coyote") "%s, event" (nil))
   ("XSTRETCH_GAMMA" pro nil (lib "xstretch.pro" nil "Coyote") "%s, event" (nil))
   ("XSTRETCH_NEGATIVE" pro nil (lib "xstretch.pro" nil "Coyote") "%s, event" (nil))
   ("XSTRETCH_OPENIMAGE" pro nil (lib "xstretch.pro" nil "Coyote") "%s, event" (nil))
   ("XSTRETCH_SAVEAS" pro nil (lib "xstretch.pro" nil "Coyote") "%s, event" (nil))
   ("XSTRETCH_SAVEHISTOAS" pro nil (lib "xstretch.pro" nil "Coyote") "%s, event" (nil))
   ("XSTRETCH_SETTHRESHOLD" pro nil (lib "xstretch.pro" nil "Coyote") "%s, event" (nil))
   ("XSTRETCH_PRINT" pro nil (lib "xstretch.pro" nil "Coyote") "%s, event" (nil))
   ("XSTRETCH_PROCESS_EVENTS" pro nil (lib "xstretch.pro" nil "Coyote") "%s, event" (nil))
   ("XSTRETCH_MOVELINE" pro nil (lib "xstretch.pro" nil "Coyote") "%s, event" (nil))
   ("XSTRETCH_STRETCHTYPE" pro nil (lib "xstretch.pro" nil "Coyote") "%s, event" (nil))
   ("XSTRETCH_QUIT" pro nil (lib "xstretch.pro" nil "Coyote") "%s, event" (nil))
   ("XSTRETCH_COLORS" pro nil (lib "xstretch.pro" nil "Coyote") "%s, event" (nil))
   ("XSTRETCH_MAXVALUE" pro nil (lib "xstretch.pro" nil "Coyote") "%s, event" (nil))
   ("XSTRETCH_IMAGE_RESIZE" pro nil (lib "xstretch.pro" nil "Coyote") "%s, event" (nil))
   ("XSTRETCH_HISTOGRAM_RESIZE" pro nil (lib "xstretch.pro" nil "Coyote") "%s, event" (nil))
   ("XSTRETCH_CLEANUP" pro nil (lib "xstretch.pro" nil "Coyote") "%s, tlb" (nil))
   ("XSTRETCH" pro nil (lib "xstretch.pro" nil "Coyote") "%s, theImage" (nil ("_EXTRA") ("Beta") ("Block") ("Colors") ("Colortable") ("Exponent") ("Filename") ("Gamma") ("Group_Leader") ("Max_Value") ("Mean") ("Negative") ("No_Window") ("Notify_Obj") ("Notify_Pro") ("Title") ("Type") ("XPos") ("YPos")))
   ("ZIMAGE_COLORS" pro nil (lib "zimage.pro" nil "Coyote") "%s, event" (nil))
   ("ZIMAGE_QUITTER" pro nil (lib "zimage.pro" nil "Coyote") "%s, event" (nil))
   ("What_Button_Pressed" fun nil (lib "zimage.pro" nil "Coyote") "Result = %s(event)" (nil))
   ("What_Button_Released" fun nil (lib "zimage.pro" nil "Coyote") "Result = %s(event)" (nil))
   ("ZIMAGE_CLEANUP" pro nil (lib "zimage.pro" nil "Coyote") "%s, tlb" (nil))
   ("ZIMAGE_FACTOR" pro nil (lib "zimage.pro" nil "Coyote") "%s, event" (nil))
   ("ZIMAGE_DRAW_EVENTS" pro nil (lib "zimage.pro" nil "Coyote") "%s, event" (nil))
   ("ZIMAGE" pro nil (lib "zimage.pro" nil "Coyote") "%s, image" (nil ("Bottom") ("ColorIndex") ("Group_Leader") ("NColors") ("NoInterpolation")))
   ("ZOOMBOX_BOX_COLOR" pro nil (lib "zoombox.pro" nil "Coyote") "%s, event" (nil))
   ("ZOOMBOX_COLORS" pro nil (lib "zoombox.pro" nil "Coyote") "%s, event" (nil))
   ("ZOOMBOX_QUITTER" pro nil (lib "zoombox.pro" nil "Coyote") "%s, event" (nil))
   ("ZOOMBOX_CLEANUP" pro nil (lib "zoombox.pro" nil "Coyote") "%s, tlb" (nil))
   ("ZOOMBOX_ZOOM_CLEANUP" pro nil (lib "zoombox.pro" nil "Coyote") "%s, tlb" (nil))
   ("ZOOMBOX_FACTOR" pro nil (lib "zoombox.pro" nil "Coyote") "%s, event" (nil))
   ("ZOOMBOX_DRAW_EVENTS" pro nil (lib "zoombox.pro" nil "Coyote") "%s, event" (nil))
   ("ZOOMBOX" pro nil (lib "zoombox.pro" nil "Coyote") "%s, image" (nil ("Group_Leader") ("Hardware_Render") ("Instance") ("Interpolation")))
   ("ZPLOT_CLEANUP" pro nil (lib "zplot.pro" nil "Coyote") "%s, tlb" (nil))
   ("ZPLOT_RESIZE" pro nil (lib "zplot.pro" nil "Coyote") "%s, event" (nil))
   ("ZPLOT_PROCESS_EVENTS" pro nil (lib "zplot.pro" nil "Coyote") "%s, event" (nil))
   ("ZPLOT_DRAWBOX" pro nil (lib "zplot.pro" nil "Coyote") "%s, event" (nil))
   ("ZPLOT" pro nil (lib "zplot.pro" nil "Coyote") "%s, x, y" (nil ("_Extra") ("Group_Leader") ("XLog") ("YLog") ("Zoom_XSize") ("Zoom_YSize")))))
