PRO sortdiagmulti

close, /all
spawn, "rm /n/Godiva7/jkrick/galfit/multiexp/xydiag.log"
spawn, "rm /n/Godiva7/jkrick/galfit/multiexp/magdiag.log"
spawn, "rm /n/Godiva7/jkrick/galfit/multiexp/rediag.log"
spawn, "rm /n/Godiva7/jkrick/galfit/multiexp/axisdiag.log"
spawn, "rm /n/Godiva7/jkrick/galfit/multiexp/padiag.log"
spawn, "rm /n/Godiva7/jkrick/galfit/multiexp/bkgddiag.log"
spawn, "rm /n/Godiva7/jkrick/galfit/multiexp/dsxdiag.log"
spawn, "rm /n/Godiva7/jkrick/galfit/multiexp/dsydiag.log"


;make an array of gal objects
gal= replicate({object, num:0, xcenter:0D, ycenter:0D, mag:0D, re:0D, axisratio:0D, pa:0D, $
     dsx:0D, dsy:0D,chi2:0D, xcenter2:0D, ycenter2:0D, mag2:0D, re2:0D, axisratio2:0D, $
     pa2:0D, bkgd2:0D, dsx2:0D, dsy2:0D},4)

openr, mainlun, "/n/Godiva7/jkrick/galfit/multiexp/listdiag", /get_lun, ERROR = err
IF (err NE 0) then PRINT, "list file did not open"

diagname = " "
WHILE (NOT eof(mainlun)) DO BEGIN
    readf, mainlun, diagname
    
    openr,  lun, diagname, /get_lun, ERROR = err
    IF (err NE 0) then PRINT, "diagnostics file did not open"
    
    ;figure out how many lines in the file
    numolines = 0
    trash = " "
    WHILE (NOT eof(lun)) DO BEGIN
        readf, lun, trash
        numolines = numolines + 1
    ENDWHILE
    
    free_lun, lun
    close, lun
    
    openr,  lun1, diagname, /get_lun, ERROR = err
    IF (err NE 0) then PRINT, "diagnostics file did not open"
    
    linefile = " "
    filearr = strarr(numolines)
    i = 0
    ;read in diagnostics file to an array of lines
    WHILE (NOT eof(lun1)) DO BEGIN
        readf, lun1, linefile
        filearr[i] = linefile
        
        i = i + 1
    ENDWHILE
    free_lun, lun1
    close, lun1

    ;put values from diagnostics file into the appropriate galaxies
    ;these are the real values of the galaxy parameters
    s = strsplit( filearr[0] ,/extract)
    gal[0].num = 0
    gal[0].xcenter = s[3]
    gal[0].ycenter = s[4]
    gal[0].mag = s[5]
    s = strsplit( filearr[1] ,/extract)
    gal[0].re = s[0]
    gal[0].axisratio = s[1]
    gal[0].pa = s[2]
     gal[0].dsx = s[3]
    gal[0].dsy = s[4]

    s = strsplit( filearr[2] ,/extract)
    gal[1].num = s[2]
    gal[1].xcenter = s[3]
    gal[1].ycenter = s[4]
    gal[1].mag = s[5]
    s = strsplit( filearr[3] ,/extract)
    gal[1].re = s[0]
    gal[1].axisratio = s[1]
    gal[1].pa = s[2]
    gal[1].dsx = s[3]
    gal[1].dsy = s[4]
  
    s = strsplit( filearr[4] ,/extract)
    gal[2].num = s[2]
    gal[2].xcenter = s[3]
    gal[2].ycenter = s[4]
    gal[2].mag = s[5]
    s = strsplit( filearr[5] ,/extract)
    gal[2].re = s[0]
    gal[2].axisratio = s[1]
    gal[2].pa = s[2]
    gal[2].dsx = s[3]
    gal[2].dsy = s[4]
    
    s = strsplit( filearr[6] ,/extract)
    gal[3].num = s[2]
    gal[3].xcenter = s[3]
    gal[3].ycenter = s[4]
    gal[3].mag = s[5]
    s = strsplit( filearr[7] ,/extract)
    gal[3].re = s[0]
    gal[3].axisratio = s[1]
    gal[3].pa = s[2]
    gal[3].dsx = s[3]
    gal[3].dsy = s[4]
    

;for the rest of the lines in the diagnostics file, 
    ;read the paramters from the galfit fits into the correct galaxies
    FOR j = 8, numolines - 1, 1 DO BEGIN
         s = strsplit(filearr[j], /extract)
         t= N_elements(s)
         IF (t GT 1) THEN BEGIN
             IF (s[0] NE "NOT") AND (s[0] NE "because") THEN BEGIN
                 IF (round(float(s[0])) EQ round(gal[0].xcenter)) AND (round(float(s[1])) EQ round(gal[0].ycenter))$
                       THEN BEGIN
                     IF (t = 5) THEN BEGIN
                         gal[0].xcenter2 = s[0]
                         gal[0].ycenter2 = s[1]
                         gal[0].chi2= s[2]
                         gal[0].mag2 = s[3]
                         gal[0].re2 = s[4]
                         j = j+1
                         s = strsplit(filearr[j], /extract)
                        
                         gal[0].axisratio2 = s[0]
                         gal[0].pa2 = s[1]
                         gal[0].bkgd2 = s[2]
                         gal[0].dsx2= s[2]
                         gal[0].dsy2 = s[3]
                      ENDIF


                     IF (t EQ 9) THEN BEGIN
                         gal[0].xcenter2 = s[0]
                         gal[0].ycenter2 = s[1]
                         gal[0].chi2= s[2]
                         gal[0].mag2 = s[3]
                         gal[0].re2 = s[4]
                         gal[0].axisratio2 = s[5]
                         gal[0].pa2 = s[6]
                         gal[0].bkgd2 = s[7]
                         gal[0].dsx2 = s[8]
                         j = j+1
                         s = strsplit(filearr[j], /extract)
                         gal[0].dsy2 = s[0]
                     ENDIF
                     IF (t EQ 10) THEN BEGIN
                         gal[0].xcenter2 = s[0]
                         gal[0].ycenter2 = s[1]
                         gal[0].chi2= s[2]
                         gal[0].mag2 = s[3]
                         gal[0].re2 = s[4]
                         gal[0].axisratio2 = s[5]
                         gal[0].pa2 = s[6]
                         gal[0].bkgd2 = s[7]
                         gal[0].dsx2 = s[8]
                         gal[0].dsy2= s[9]
                     enDIF
                     IF (gal[0].re2 GT 100) THEN gal[0].xcenter2 = 0.
                     IF (gal[0].axisratio2 LT 0.09) THEN gal[0].xcenter2 = 0.
                      IF (t EQ 9) THEN s = strsplit(filearr[j-1], /extract)
                ENDIF
                 
                 IF (round(float(s[0])) EQ round(gal[1].xcenter)) AND (round(float(s[1])) EQ round(gal[1].ycenter))$
                   THEN BEGIN
                     IF (t = 5) THEN BEGIN
                         gal[1].xcenter2 = s[0]
                         gal[1].ycenter2 = s[1]
                         gal[1].chi2= s[2]
                         gal[1].mag2 = s[3]
                         gal[1].re2 = s[4]
                         j = j+1
                         s = strsplit(filearr[j], /extract)
                        
                         gal[1].axisratio2 = s[0]
                         gal[1].pa2 = s[1]
                         gal[1].bkgd2 = s[2]
                         gal[1].dsx2 = s[2]
                         gal[1].dsy2 = s[3]
                     ENDIF
                     IF (t EQ 9) THEN BEGIN
                         gal[1].xcenter2 = s[0]
                         gal[1].ycenter2 = s[1]
                         gal[1].chi2= s[2]
                         gal[1].mag2 = s[3]
                         gal[1].re2 = s[4]
                         gal[1].axisratio2 = s[5]
                         gal[1].pa2 = s[6]
                         gal[1].bkgd2 = s[7]
                         gal[1].dsx2= s[8]
                          j = j+1
                          s = strsplit(filearr[j], /extract)
                         gal[1].dsy2 = s[0]
                     enDIF
                     IF (t EQ 10) THEN BEGIN
                         gal[1].xcenter2 = s[0]
                         gal[1].ycenter2 = s[1]
                         gal[1].chi2= s[2]
                         gal[1].mag2 = s[3]
                         gal[1].re2 = s[4]
                         gal[1].axisratio2 = s[5]
                         gal[1].pa2 = s[6]
                         gal[1].bkgd2 = s[7]
                         gal[1].dsx2 = s[8]
                         gal[1].dsy2= s[9]
                     ENDIF
                      IF (gal[1].re2 GT 100) THEN gal[1].xcenter2 = 0.
                     IF (gal[1].axisratio2 LT 0.09) THEN gal[1].xcenter2 = 0.
                     IF (t EQ 9) THEN s = strsplit(filearr[j-1], /extract)
                 ENDIF
                 
                 
                 IF (round(float(s[0])) EQ round(gal[2].xcenter)) AND (round(float(s[1])) EQ round(gal[2].ycenter))$
                   THEN BEGIN
                     IF (t = 5) THEN BEGIN
                         gal[2].xcenter2 = s[0]
                         gal[2].ycenter2 = s[1]
                         gal[2].chi2= s[2]
                         gal[2].mag2 = s[3]
                         gal[2].re2 = s[4]
                         j = j+1
                         s = strsplit(filearr[j], /extract)
                        
                         gal[2].axisratio2 = s[0]
                         gal[2].pa2 = s[1]
                         gal[2].bkgd2 = s[2]
                         gal[2].dsx2 = s[2]
                         gal[2].dsy2 = s[3]
                     ENDIF
                     IF (t EQ 9) THEN BEGIN
                         gal[2].xcenter2 = s[0]
                         gal[2].ycenter2 = s[1]
                         gal[2].chi2= s[2]
                         gal[2].mag2 = s[3]
                         gal[2].re2 = s[4]
                         gal[2].axisratio2 = s[5]
                         gal[2].pa2 = s[6]
                         gal[2].bkgd2 = s[7]
                         gal[2].dsx2 = s[8]
                         j = j+1
                         s = strsplit(filearr[j], /extract)
                         gal[2].dsy2 = s[0]
                     enDIF
                     IF (t EQ 10) THEN BEGIN
                         gal[2].xcenter2 = s[0]
                         gal[2].ycenter2 = s[1]
                         gal[2].chi2= s[2]
                         gal[2].mag2 = s[3]
                         gal[2].re2 = s[4]
                         gal[2].axisratio2 = s[5]
                         gal[2].pa2 = s[6]
                         gal[2].bkgd2 = s[7]
                         gal[2].dsx2 = s[8]
                         gal[2].dsy2= s[9]
                     enDIF
                      IF (gal[2].re2 GT 100) THEN gal[2].xcenter2 = 0.
                     IF (gal[2].axisratio2 LT 0.09) THEN gal[2].xcenter2 = 0.
                     IF (t EQ 9) THEN s = strsplit(filearr[j-1], /extract)
                 ENDIF
                 
                 IF (round(float(s[0])) EQ round(gal[3].xcenter)) AND (round(float(s[1])) EQ round(gal[3].ycenter))$
                   THEN BEGIN
                     IF (t = 5) THEN BEGIN
 ;                        print, "inside gal[3] if t eq 5"
                         gal[3].xcenter2 = s[0]
                         gal[3].ycenter2 = s[1]
                         gal[3].chi2= s[2]
                         gal[3].mag2 = s[3]
                         gal[3].re2 = s[4]
                         j = j+1
                         s = strsplit(filearr[j], /extract)
                        
                         gal[3].axisratio2 = s[0]
                         gal[3].pa2 = s[1]
                         gal[3].bkgd2 = s[2]
                         gal[3].dsx2= s[2]
                         gal[3].dsy2 = s[3]
                     ENDIF
                     IF (t EQ 9) THEN BEGIN
                         gal[3].xcenter2 = s[0]
                         gal[3].ycenter2 = s[1]
                         gal[3].chi2= s[2]
                         gal[3].mag2 = s[3]
                         gal[3].re2 = s[4]
                         gal[3].axisratio2 = s[5]
                         gal[3].pa2 = s[6]
                         gal[3].bkgd2 = s[7]
                         gal[3].dsx2 = s[8]
                         j = j+1
                         s = strsplit(filearr[j], /extract)
                         gal[3].dsy2 = s[0]
                     ENDIF

                     IF (t EQ 10) THEN BEGIN
                         gal[3].xcenter2 = s[0]
                         gal[3].ycenter2 = s[1]
                         gal[3].chi2= s[2]
                         gal[3].mag2 = s[3]
                         gal[3].re2 = s[4]
                         gal[3].axisratio2 = s[5]
                         gal[3].pa2 = s[6]
                         gal[3].bkgd2 = s[7]
                         gal[3].dsx2 = s[8]
                         gal[3].dsy2= s[9]
                     ENDIF

                     IF (gal[3].re2 GT 100) THEN gal[3].xcenter2 = 0.
                     IF (gal[3].axisratio2 LT 0.09) THEN gal[3].xcenter2 = 0.
                     IF (t EQ 9) THEN s = strsplit(filearr[j-1], /extract)
                 ENDIF
                 
             ENDIF
             
         ENDIF
         
     ENDFOR
;find correlations among the position angles
;this is not perfect, need to have it know that 1 is within 10% of 179
     FOR f = 0,3,1 DO BEGIN
         IF (gal[f].pa LT 0. ) THEN gal[f].pa = gal[f].pa + 180. ;really shouldn't have gotten here
         IF (gal[f].pa2 LT 0.) AND (gal[f].pa2 GT (-180.)) THEN gal[f].pa2 = gal[f].pa2 + 180.
         IF (gal[f].pa2 LT 0.) AND (gal[f].pa2 LT (-180.)) THEN gal[f].pa2 = gal[f].pa2 + 360.
         IF (gal[f].pa2 GT 180.) THEN gal[f].pa2 = gal[f].pa2 - 180.
     ENDFOR
    
FOR m = 0, 3, 1 DO BEGIN
 ;make a magnitude cutoff
   IF (gal[m].mag GT 23.) THEN BEGIN
        gal[m].xcenter2 = 0.
        gal[m].ycenter2 = 0.
        gal[m].mag2 = 0.
        gal[m].re2 = 0.
        gal[m].axisratio2 = 0.
        gal[m].pa2 = 0.
    ENDIF

;make a cutoff in re
;    IF (gal[m].re GT 15) THEN BEGIN
;        gal[m].xcenter2 = 0.
;        gal[m].ycenter2 = 0.
;        gal[m].mag2 = 0.
;        gal[m].re2 = 0.
;        gal[m].axisratio2 = 0.
;        gal[m].pa2 = 0.
;    ENDIF
    
ENDFOR

;distance between galaxies
    dist = abs(gal[0].xcenter - gal[2].xcenter)
 
    x10percent = 0.
    mag10percent = 0.
    re10percent = 0.
    axis10percent = 0.
    pa10percent = 0.
    bkgd10percent = 0.
    dsx10percent = 0.
    dsy10percent = 0.
     x20percent = 0.
    mag20percent = 0.
    re20percent = 0.
    axis20percent = 0.
    pa20percent = 0.
    bkgd20percent = 0.
     dsx20percent = 0.
    dsy20percent = 0.
   
    fracpercent = 4.
    ;if I don't include a galaxy, need to
    ;know that then there are less total to include in the fractions
    FOR k = 0, 3, 1 DO BEGIN
        IF (gal[k].xcenter2 EQ 0.) THEN BEGIN
            fracpercent = fracpercent - 1.
        ENDIF

    ENDFOR

    IF (fracpercent NE 0.) THEN     fracpercent = 1. / fracpercent
    
    ;for each galaxy, if it hasn't been removed from the list,
    ;find the percentage of galaxies that
    ;recovered the correct parameters
    ;to 10 and 20 percent 
    FOR k = 0, 3, 1 DO BEGIN
 
        IF ( gal[k].xcenter2 NE 0.) THEN BEGIN
;
 ;           xcenterdiff = round(100.* abs(gal[k].xcenter - gal[k].xcenter2) / gal[k].xcenter)
;            ycenterdiff = round(100.*abs(gal[k].ycenter - gal[k].ycenter2) / gal[k].ycenter)
;            magdiff = round(100.*abs(gal[k].mag - gal[k].mag2) / gal[k].mag)
;            rediff = round(100.*abs(gal[k].re - gal[k].re2) / gal[k].re)
;            axisratiodiff = round(100.*abs(gal[k].axisratio - gal[k].axisratio2) / gal[k].axisratio)
;            IF ( gal[k].pa EQ 0.) THEN BEGIN
;                padiff = round(100.*abs(gal[k].pa - gal[k].pa2) / gal[k].pa2)
;            ENDIF ELSE BEGIN
;                padiff = round(100.*abs(gal[k].pa - gal[k].pa2) / gal[k].pa)
;            ENDELSE;;;;

;            IF ((xcenterdiff + ycenterdiff) / 2 LE 10) THEN x10percent = x10percent + fracpercent
;            IF (magdiff LE 10) THEN mag10percent = mag10percent + fracpercent
;            IF (rediff LE 10) THEN re10percent = re10percent + fracpercent
;            IF (axisratiodiff LE 10) THEN axis10percent = axis10percent + fracpercent
;            IF (abs(gal[k].pa - gal[k].pa2) LT 18.) THEN pa10percent = pa10percent + fracpercent;;

;            IF ((xcenterdiff + ycenterdiff) / 2 LE 20) THEN x20percent = x20percent + fracpercent
;            IF (magdiff LE 20) THEN mag20percent = mag20percent + fracpercent
;            IF (rediff LE 20) THEN re20percent = re20percent + fracpercent
;            IF (axisratiodiff LE 20) THEN axis20percent = axis20percent + fracpercent
;            IF (padiff LE 20) THEN pa20percent = pa20percent +
;            fracpercent
            xcenterdiff = abs(gal[k].xcenter - gal[k].xcenter2)
            ycenterdiff = abs(gal[k].ycenter - gal[k].ycenter2)
            magdiff = abs(gal[k].mag - gal[k].mag2) 
            rediff = abs(gal[k].re - gal[k].re2) 
            axisratiodiff = abs(gal[k].axisratio - gal[k].axisratio2) 
            padiff = abs(gal[k].pa - gal[k].pa2) 
            bkgddiff = abs(4 - gal[k].bkgd2)   ;will need to change this if I change bkgd values
            dsxdiff = abs(gal[k].dsx - gal[k].dsx2)
            dsydiff = abs(gal[k].dsy - gal[k].dsy2)

            IF ((xcenterdiff + ycenterdiff) / 2 LE 0.5) THEN x10percent = x10percent + fracpercent
            IF ( magdiff LE 0.1) THEN mag10percent = mag10percent + fracpercent
            IF (padiff LE 10) THEN  pa10percent = pa10percent + fracpercent
            IF (gal[k].re LT 4) THEN BEGIN
                IF (rediff LE 1) THEN re10percent = re10percent + fracpercent
            ENDIF ELSE BEGIN
                IF (round(100* rediff/ gal[k].re) LE 10) THEN re10percent = re10percent + fracpercent
            ENDELSE
            IF (axisratiodiff LE 0.1) THEN axis10percent = axis10percent + fracpercent
             IF (round(100*bkgddiff / 4.0) LE 2) THEN bkgd10percent = bkgd10percent + fracpercent
             IF (round(100*dsxdiff/ gal[k].dsx) LE 10) THEN dsx10percent = dsx10percent + fracpercent
             IF (round(100*dsydiff / gal[k].dsy) LE 10) THEN dsy10percent =dsy10percent + fracpercent

            

            IF ((xcenterdiff + ycenterdiff) / 2 LE 1) THEN x20percent = x20percent + fracpercent
            IF ( magdiff LE 0.2) THEN mag20percent = mag20percent + fracpercent
            IF (padiff LE 20) THEN  pa20percent = pa20percent + fracpercent
            IF (gal[k].re LT 4) THEN BEGIN
                IF (rediff LE 2) THEN re20percent = re20percent + fracpercent
            ENDIF ELSE BEGIN
                IF (round(100* rediff/ gal[k].re) LE 20) THEN re20percent = re20percent + fracpercent
            ENDELSE
            IF (axisratiodiff LE 0.2) THEN axis20percent = axis20percent + fracpercent
            IF (round(100*bkgddiff / 4.0) LE 4) THEN bkgd20percent = bkgd20percent + fracpercent
            IF (round(100*dsxdiff/ gal[k].dsx) LE 10) THEN dsx20percent = dsx20percent + fracpercent
            IF (round(100*dsydiff / gal[k].dsy) LE 20) THEN dsy20percent =dsy20percent + fracpercent
            

        ENDIF


    ENDFOR
;put them into files
    openw, outlun, "/n/Godiva7/jkrick/galfit/multiexp/xydiag.log", /GET_LUN, /append
    printf, outlun, dist, x10percent, x20percent
    free_lun, outlun
    close, outlun
    
    openw, outlun, "/n/Godiva7/jkrick/galfit/multiexp/magdiag.log", /GET_LUN, /append
    printf, outlun, dist, mag10percent, mag20percent
    free_lun, outlun
    close, outlun
    
    openw, outlun, "/n/Godiva7/jkrick/galfit/multiexp/rediag.log", /GET_LUN, /append
    printf, outlun, dist, re10percent,re20percent
    free_lun, outlun
    close, outlun
    
    openw, outlun, "/n/Godiva7/jkrick/galfit/multiexp/axisdiag.log", /GET_LUN, /append
    printf, outlun, dist, axis10percent,axis20percent
    free_lun, outlun
    close, outlun
    
    openw, outlun, "/n/Godiva7/jkrick/galfit/multiexp/padiag.log", /GET_LUN, /append
    printf, outlun, dist, pa10percent,pa20percent
    free_lun, outlun
    close, outlun
    openw, outlun, "/n/Godiva7/jkrick/galfit/multiexp/bkgddiag.log", /GET_LUN, /append
    printf, outlun, dist, bkgd10percent,bkgd20percent
    free_lun, outlun
    close, outlun

    openw, outlun, "/n/Godiva7/jkrick/galfit/multiexp/dsxdiag.log", /GET_LUN, /append
    printf, outlun, dist, dsx10percent,dsx20percent
    free_lun, outlun
    close, outlun

    openw, outlun, "/n/Godiva7/jkrick/galfit/multiexp/dsydiag.log", /GET_LUN, /append
    printf, outlun, dist, dsy10percent,dsy20percent
    free_lun, outlun
    close, outlun


ENDWHILE

close, mainlun
free_lun, mainlun

;i know this is not efficient, but read back in from files to plot

device, true=24
device, decomposed=0
colors = GetColor(/load, Start=1)

mydevice = !D.NAME
!p.multi= [0, 0, 2]
SET_PLOT, 'ps'

device, filename = '/n/Godiva7/jkrick/galfit/multiexp/frac.ps', /portrait, $
  BITS=8, scale_factor=0.9 , /color
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;



numolines = 730

dist = fltarr(numolines)
xy10point = fltarr(numolines)
mag10point = fltarr(numolines)
re10point = fltarr(numolines)
axis10point = fltarr(numolines)
pa10point = fltarr(numolines)
bkgd10point = fltarr(numolines)
dsx10point = fltarr(numolines)
dsy10point = fltarr(numolines)
xy20point = fltarr(numolines)
mag20point = fltarr(numolines)
re20point = fltarr(numolines)
axis20point = fltarr(numolines)
pa20point = fltarr(numolines)
bkgd20point = fltarr(numolines)
dsx20point = fltarr(numolines)
dsy20point = fltarr(numolines)


i  = 0
openr, whatever, "/n/Godiva7/jkrick/galfit/multiexp/xydiag.log", /GET_LUN
WHILE (NOT eof(whatever)) DO BEGIN
    readf, whatever, distin, xypointin, second
    dist[i] = distin
    xy10point[i] = xypointin
    xy20point[i] = second
    i = i + 1
ENDWHILE
free_lun, whatever
close, whatever
   
i  = 0
openr, whatever, "/n/Godiva7/jkrick/galfit/multiexp/magdiag.log", /GET_LUN
WHILE (NOT eof(whatever)) DO BEGIN
    readf, whatever, distin, magpointin, second
    mag10point[i] = magpointin
    mag20point[i] = second
    i = i + 1
ENDWHILE
free_lun, whatever
close, whatever
 
i  = 0
openr, whatever, "/n/Godiva7/jkrick/galfit/multiexp/rediag.log", /GET_LUN
WHILE (NOT eof(whatever)) DO BEGIN
    readf, whatever, distin, repointin, second
    re10point[i] = repointin
    re20point[i] = second
    i = i + 1
ENDWHILE
 free_lun, whatever
close, whatever

i  = 0
openr, whatever, "/n/Godiva7/jkrick/galfit/multiexp/axisdiag.log", /GET_LUN
WHILE (NOT eof(whatever)) DO BEGIN
    readf, whatever, distin, axispointin, second
    axis10point[i] = axispointin
    axis20point[i] = second
    i = i + 1
ENDWHILE
free_lun, whatever
close, whatever
 
i  = 0
openr, whatever, "/n/Godiva7/jkrick/galfit/multiexp/padiag.log", /GET_LUN
WHILE (NOT eof(whatever)) DO BEGIN
    readf, whatever, distin, papointin, second
    pa10point[i] = papointin
    pa20point[i] = second
    i = i + 1
ENDWHILE
 
free_lun, whatever
close, whatever
i  = 0
openr, whatever, "/n/Godiva7/jkrick/galfit/multiexp/bkgddiag.log", /GET_LUN
WHILE (NOT eof(whatever)) DO BEGIN
    readf, whatever, distin, bkgdpointin, second
    bkgd10point[i] = bkgdpointin
    bkgd20point[i] = second
    i = i + 1
ENDWHILE
free_lun, whatever
close, whatever

i  = 0
openr, whatever, "/n/Godiva7/jkrick/galfit/multiexp/dsxdiag.log", /GET_LUN
WHILE (NOT eof(whatever)) DO BEGIN
    readf, whatever, distin, dsxpointin, second
    dsx10point[i] = dsxpointin
    dsx20point[i] = second
    i = i + 1
ENDWHILE
free_lun, whatever
close, whatever

i  = 0
openr, whatever, "/n/Godiva7/jkrick/galfit/multiexp/dsydiag.log", /GET_LUN
WHILE (NOT eof(whatever)) DO BEGIN
    readf, whatever, distin, dsypointin, second
    dsy10point[i] = dsypointin
    dsy20point[i] = second
    i = i + 1
ENDWHILE
free_lun, whatever
close, whatever

;shorten the arrays to only be as long as they need to be
dist = dist[0:i  - 1]
xy10point = xy10point[0:i-1]
mag10point = mag10point[0:i-1]
re10point = re10point[0:i-1]
axis10point = axis10point[0:i-1]
pa10point = pa10point[0:i-1]
bkgd10point = bkgd10point[0:i-1]
dsx10point = dsx10point[0:i-1]
dsy10point = dsy10point[0:i-1]
xy20point = xy20point[0:i-1]
mag20point = mag20point[0:i-1]
re20point = re20point[0:i-1]
axis20point = axis20point[0:i-1]
pa20point = pa20point[0:i-1]
bkgd20point = bkgd20point[0:i-1]
dsx20point = dsx20point[0:i-1]
dsy20point = dsy20point[0:i-1]

;sort them,
sortindex= sort(dist)
sorteddist = dist[sortindex]
sortedxy10point = xy10point[sortindex]
sortedmag10point = mag10point[sortindex]
sortedre10point = re10point[sortindex]
sortedaxis10point = axis10point[sortindex]
sortedpa10point = pa10point[sortindex]
sortedbkgd10point = bkgd10point[sortindex]
sorteddsx10point = dsx10point[sortindex]
sorteddsy10point = dsy10point[sortindex]
sortedxy20point = xy20point[sortindex]
sortedmag20point = mag20point[sortindex]
sortedre20point = re20point[sortindex]
sortedaxis20point = axis20point[sortindex]
sortedpa20point = pa20point[sortindex]
sortedbkgd20point = bkgd20point[sortindex]
sorteddsx20point = dsx20point[sortindex]
sorteddsy20point = dsy20point[sortindex]
f = 0
d = 0
newdist = fltarr(i - 1)
newxy10point = fltarr(i - 1)
newmag10point = fltarr(i - 1)
newre10point = fltarr(i - 1)
newaxis10point = fltarr(i - 1)
newpa10point = fltarr(i - 1)
newbkgd10point = fltarr(i - 1)
newdsx10point = fltarr(i - 1)
newdsy10point = fltarr(i - 1)
newxy20point = fltarr(i - 1)
newmag20point = fltarr(i - 1)
newre20point = fltarr(i - 1)
newaxis20point = fltarr(i - 1)
newpa20point = fltarr(i - 1)
newbkgd20point = fltarr(i - 1)
newdsx20point = fltarr(i - 1)
newdsy20point = fltarr(i - 1)

;average all the values at the same distance
FOR c = 1, i - 1,  1 DO BEGIN

    IF  (sorteddist(c) EQ sorteddist(c - 1))  THEN BEGIN 
        newdist(d)  = sorteddist(c)
        newxy10point(d) = newxy10point(d) + sortedxy10point(c)
        newmag10point(d) = newmag10point(d) + sortedmag10point(c)
        newre10point(d) = newre10point(d) + sortedre10point(c)
        newaxis10point(d) = newaxis10point(d) + sortedaxis10point(c)
        newpa10point(d) = newpa10point(d) + sortedpa10point(c)
        newbkgd10point(d) = newbkgd10point(d) + sortedbkgd10point(c)
        newdsx10point(d) = newdsx10point(d) + sorteddsx10point(c)
        newdsy10point(d) = newdsy10point(d) + sorteddsy10point(c)
        newxy20point(d) = newxy20point(d) + sortedxy20point(c)
        newmag20point(d) = newmag20point(d) + sortedmag20point(c)
        newre20point(d) = newre20point(d) + sortedre20point(c)
        newaxis20point(d) = newaxis20point(d) + sortedaxis20point(c)
        newpa20point(d) = newpa20point(d) + sortedpa20point(c)
        newbkgd20point(d) = newbkgd20point(d) + sortedbkgd20point(c)
        newdsx20point(d) = newdsx20point(d) + sorteddsx20point(c)
        newdsy20point(d) = newdsy20point(d) + sorteddsy20point(c)
        f = f + 1
    ENDIF ELSE BEGIN
        newxy10point(d) = newxy10point(d) / f
        newmag10point(d) = newmag10point(d) / f
        newre10point(d) = newre10point(d) / f
        newaxis10point(d) = newaxis10point(d) / f
        newpa10point(d) = newpa10point(d) / f
        newbkgd10point(d) = newbkgd10point(d) / f
        newdsx10point(d) = newdsx10point(d) / f
        newdsy10point(d) = newdsy10point(d) / f
       newxy20point(d) = newxy20point(d) / f
        newmag20point(d) = newmag20point(d) / f
        newre20point(d) = newre20point(d) / f
        newaxis20point(d) = newaxis20point(d) / f
        newpa20point(d) = newpa20point(d) / f
        newbkgd20point(d) = newbkgd20point(d) / f
        newdsx20point(d) = newdsx20point(d) / f
        newdsy20point(d) = newdsy20point(d) / f

        d = d + 1
        f = 0
    ENDELSE

ENDFOR

;again shorten the arrays to only be as long as they need to be
newdist = newdist[0:d-1]
newxy10point = newxy10point[0:d-1]
newmag10point = newmag10point[0:d-1]
newre10point = newre10point[0:d-1]
newaxis10point = newaxis10point[0:d-1]
newpa10point = newpa10point[0:d-1]
newbkgd10point = newbkgd10point[0:d-1]
newdsx10point = newdsx10point[0:d-1]
newdsy10point = newdsy10point[0:d-1]
newxy20point = newxy20point[0:d-1]
newmag20point = newmag20point[0:d-1]
newre20point = newre20point[0:d-1]
newaxis20point = newaxis20point[0:d-1]
newpa20point = newpa20point[0:d-1]
newbkgd20point = newbkgd20point[0:d-1]
newdsx20point = newdsx20point[0:d-1]
newdsy20point = newdsy20point[0:d-1]

plot, newdist, newxy10point,thick = 3, $
       YRANGE = [0,1.5] ,psym = -5,$
        ytitle = 'fraction of gals correct ', title = 'Multiexp Galaxy Simulations with Galfit';, $
;  xtitle = 'distance between galaxies (pixels)'

oplot, newdist, newmag10point, thick = 3, psym = -6,color = colors.red
oplot, newdist, newre10point, thick = 3, psym = -4, color = colors.green
oplot, newdist, newaxis10point, thick = 3, psym = -2, color = colors.magenta
oplot, newdist, newpa10point, thick = 3, psym = -1, color = colors.blue
oplot, newdist, newbkgd10point, thick = 3, psym = -1, color = colors.yellow
;oplot, newdist, newdsx10point, thick = 3, psym = -2, color = colors.orange
;oplot, newdist, newdsy10point, thick = 3, psym = -4, color = colors.cyan

xyouts, 60, 0.5, "xycenters", charsize = 0.7,color = colors.black
xyouts, 60, 0.4, "magnitude (18 - 23)", charsize = 0.7,color = colors.red
xyouts, 60, 0.2, "re (0.1 - 18.1)", charsize = 0.7,color = colors.green
xyouts, 60, 0.3, "axisratio(0.1 - 1)", charsize = 0.7,color = colors.magenta
xyouts, 60, 0.1, "position angle", charsize = 0.7,color = colors.blue


xline = findgen(100)
yline = fltarr(100)
yline(*) = 0.7
oplot, xline,yline, color = colors.black


plot, newdist, newxy20point,thick = 3, $
       YRANGE = [0,1.5] ,psym = -5,$
        ytitle = 'fraction of gals correct ',   xtitle = 'distance between galaxies (pixels)', $
        subtitle = '4 galaxies per simulation, 20 simulations at each separation distance'
;title = 'Galaxy Simulation Fun', $


oplot, newdist, newmag20point, thick = 3, psym = -6,color = colors.red
oplot, newdist, newre20point, thick = 3, psym = -4, color = colors.green
oplot, newdist, newaxis20point, thick = 3, psym = -2, color = colors.magenta
oplot, newdist, newpa20point, thick = 3, psym = -1, color = colors.blue
oplot, xline,yline, color = colors.black
oplot, newdist, newbkgd20point, thick = 3, psym = -1, color = colors.yellow
;oplot, newdist, newdsx20point, thick = 3, psym = -2, color = colors.orange
;oplot, newdist, newdsy20point, thick = 3, psym = -4, color = colors.cyan
xyouts, 60, 0.5, "background", charsize = 0.7,color = colors.yellow
;xyouts, 60, 0.4, "dsky/dx", charsize = 0.7,color = colors.orange
;xyouts, 60, 0.3, "dsky/dy", charsize = 0.7,color = colors.cyan



close, lun1
device, /close
set_plot, mydevice



close, /all
undefine, gal
END
