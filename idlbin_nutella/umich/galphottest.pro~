;May 2002
;
;The purpose of this program is to block all the objects in an image.
; The stars are fit with a moffat profile, and subtracted as well as
; blocked in the centers.
; bad columns, cosmic rays, faint objects, and galaxies are also dealt
; with.
; saturated stars are ignored and need to be blocked by hand
;
;input: image with objects to be blocked, and a blank image of the
;       same size
;
;output: an image named ccd****.s.fits with the objects set equal to 
; 	-100, and an image called substars with the homemade stars on a 
;	a zero background ready to be subtracted
;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


FUNCTION starmask, f, xcenter, ycenter, maxradius, xmax, ymax,blankdata
;this function acutally makes the homemade star and adds it to a blank
;image

;need to change this for final version. is a way of normalizing the flux
;D = f * 1.36/38.6597
;D = f * 1.36/53.4
;D = f * 1.36/39.6
;D = f* 1.36/35.6
;D = f 
D = 0.001257*f    ; for the moffat function

sb4 = 22.04 - 2.5*alog10((D*mymoffat(15.4))/(0.435^2.))   ;sb @ 4arcsec
sb2 = 22.04 - 2.5*alog10((D*mymoffat(7))/(0.435^2.))      ;sb @ 2arcsec
;print, "xcen, ycen,f, D, sb4,sb2",xcenter, ycenter, f, D, sb4, sb2
radius = 0.0		

intx = fix(xcenter)
inty = fix(ycenter)

dx = xcenter-intx
dy = ycenter-inty

;print, "star inside starmask", intx, dx, inty, dy

blank1 = blankdata
blank1(*,*) = 0.0

FOR y = inty-maxradius, inty + maxradius,1 DO BEGIN
    FOR x = intx -maxradius, intx + maxradius,1 DO BEGIN
        ;find what the radius is from the center
        radius = sqrt((intx - x)^2 + (inty - y)^2)
        intensity = 0.
        IF radius LT 45.0 AND radius NE 0.0 THEN BEGIN
            intensitysb = (3.8 + 2.5*alog10((43.5/radius)^(-3.9)) + sb2)
            intensity = (0.435^2.)*(10.^((22.04-intensitysb)/(2.5)))
        ENDIF

        IF (radius GE 45.0) THEN begin
            intensitysb = (3.9 + 2.5*alog10((43.5/radius)^(-2.0)) + sb2)
;            intensitysb2 = (4.3 + 2.5*alog10((43.5/radius)^(-3.9)) + sb2)

            intensity = (0.435^2.)*(10.^((22.04-intensitysb)/(2.5))); + (0.435^2.)*(10.^((22.04-intensitysb2)/(2.5)))
        ENDIF

        ;make sure not off the edge of the chip
        ;need to deal with going from fractional pixels to whole pixels
        IF (x LT xmax AND y LT ymax AND x GT 1 AND y GT 1 ) THEN BEGIN
            blank1[x,y] = blank1[x,y] + intensity
        ENDIF
;    ENDIF

    ENDFOR
ENDFOR

blank1 = shiftf(blank1, dx,dy)
blankdata = blankdata - blank1
return, 0              
END

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

PRO galphottest

FOR run = 1, 1, 1 DO begin

close, /all
filename = strarr(1) 
;openr, lun5, "/n/Godiva2/jkrick/A114/original/listfull", /get_lun
;WHILE (NOT EOF(lun5)) DO BEGIN
;    readf, lun5, filename
;declare variables
o = 0.0                         ;object number
xcenter = 0.0   		;xcenter
ycenter = 0.0			;ycenter
e = 0.0                         ;ellipticity
a = 0.0                         ;semi-major axis
b = 0.0                         ;semi-minor axis
m = 0.0                         ;magnitude (un-corrected for zpt, X, ...)
j = 0.0                         ;junk
f = 0.0                         ;flux
fwhm = 0.0                      ;full width at half maximum
isoarea = 0.0                   ;area inside of last isophote

;filename = strarr(1)            ;declare filename to be a stringarray
maxradius = 58.0                ; maximum radius in pixels to create a star
intensity = 0.0
bkgd = 0.0
smaarr = fltarr(20000)
smacount = 0
true = 0                        ;manual boolean variable

;size of the image
xmax =3190;3011;1601;2866;2001;
ymax =3650;3461;1801;3486;2161;2900;

;read in a blank image to which I can add my own stars			

FITS_READ, '/n/Godiva4/jkrick/A2734/original/fullblank.fits', blankdata, blankheader

filename = "/n/Godiva4/jkrick/A2734/original/fullr"

imagefile = filename + '.fits'
datafile = '/n/Godiva3/jkrick/A2556/SExtractor.r.cat'
;datafile = '/n/Godiva4/jkrick/A4010/block_obj.r.input'
newimagefile = filename + '.s.fits'	
outfile = filename + '.bblock.fits'


;run SExtractor on the image to find the objects
commandline = '/n/Godiva7/jkrick/Sex/sex ' + imagefile + " -c /n/Godiva3/jkrick/A2556/iclr.sex"
spawn, commandline


;read in the fits image with the stars that need to be subtracted
FITS_READ, imagefile, data, header   ;changed this to be the  1 second image (not 900)


;read the data file into the variables until hit EOF
starcount = 0
galcount = 0
crcount = 0
dimcount = 0
satcount = 0
totalflux = 0.0  				;in case I want to know
galbestflux = 0.0
galisoflux = 0.0
subgalscount = 0

;_______________________________________________________________________________

;______________________________________________________________________________________


;open the SExtractor output datafile (ccd*.cat)
OPENR, lun, datafile, /GET_LUN

WHILE (NOT EOF(lun)) DO BEGIN
    ;!!!! change this if you change the daofind.param , now usign godiva7/galfit/dao..
    READF, lun, o, xcenter, ycenter, a, b, e, f, m, isoarea, fwhm, pa, bkgd, apflux,isocorflux,isoflux
;    print, "working on object", o
    
   
    ;________________________________________________________________________________
    ;get rid of the galaxies
;    IF (fwhm GT 4.2 AND true EQ 0) THEN BEGIN
    IF (fwhm GT 3.9 AND true EQ 0) THEN BEGIN ;5.1
  
        ;to make the dim galaxy masks big enough
;        IF (isoarea LT 9) THEN isoarea = 9 ;small galaxies

        sma = sqrt(isoarea/(!PI*(1-e)))
        smb = isoarea/(!PI*sma)
		
        ;go out further than the isoarea
        IF run EQ 0 THEN begin
            IF (sma GT 15.0 OR smb GT 15.0) THEN BEGIN ;big galaxies
                IF(isoarea GT 2000.) THEN BEGIN
 ;               print, "central galaxy bigger than 2000", xcenter, ycenter, isoarea
                    sma = ((1.4*sma)+1.9)/0.879 ; 2.6,2.0,1.4                 
                    smb =  ((1.4*smb)+1.9)/0.879 ;  2.6,2.0,1.4                 
                ENDIF ELSE BEGIN

                    sma =  ((1.6*sma)+1.9)/0.879 ; 3.0,2.3 ,1.6                 
                    smb =  ((1.6*smb)+1.9)/0.879 ; 3.0,2.3,1.6                  
                ENDELSE
                
            ENDIF ELSE BEGIN    ;normal galaxies
                sma =  ((1.4*sma)+1.9)/0.879   ; 2.6,2.0,1.4                      
                smb =  ((1.4*smb)+1.9)/0.879   ; 2.6,2.0,1.4                      
            ENDELSE
            
        ENDIF 
        IF run EQ 1 THEN begin
            IF (sma GT 15.0 OR smb GT 15.0) THEN BEGIN ;big galaxies
                IF(isoarea GT 2000.) THEN BEGIN
 ;               print, "central galaxy bigger than 2000", xcenter, ycenter, isoarea
                    sma =  ((2.0*sma)+1.9)/0.879 ; 2.6,2.0,1.4                 
                    smb =  ((2.0*smb)+1.9)/0.879 ;  2.6,2.0,1.4                 
                ENDIF ELSE BEGIN

                    sma =  ((2.3*sma)+1.9)/0.879 ; 3.0,2.3 ,1.6                 
                    smb =  ((2.3*smb)+1.9)/0.879 ; 3.0,2.3,1.6                  
                ENDELSE
                
            ENDIF ELSE BEGIN    ;normal galaxies
                sma =  ((2.0*sma)+1.9)/0.879   ; 2.6,2.0,1.4                      
                smb =  ((2.0*smb)+1.9)/0.879   ; 2.6,2.0,1.4                      
            ENDELSE
            
        ENDIF 
        IF run EQ 2 THEN begin
            IF (sma GT 15.0 OR smb GT 15.0) THEN BEGIN ;big galaxies
                IF(isoarea GT 2000.) THEN BEGIN
 ;               print, "central galaxy bigger than 2000", xcenter, ycenter, isoarea
                    sma =  ((2.6*sma)+1.9)/0.879 ; 2.6,2.0,1.4                 
                    smb =  ((2.6*smb)+1.9)/0.879 ;  2.6,2.0,1.4                 
                ENDIF ELSE BEGIN

                    sma =  ((3.0*sma)+1.9)/0.879 ; 3.0,2.3 ,1.6                 
                    smb =  ((3.0*smb)+1.9)/0.879 ; 3.0,2.3,1.6                  
                ENDELSE
                
            ENDIF ELSE BEGIN    ;normal galaxies
                sma =  ((2.6*sma)+1.9)/0.879   ; 2.6,2.0,1.4                      
                smb =  ((2.6*smb)+1.9)/0.879   ; 2.6,2.0,1.4                      
            ENDELSE
            
        ENDIF 
        

      
        theta = pa
        return = del_star_A2734(theta, f, sma , smb, xcenter, ycenter, data)
        return = del_star_A2734(pa, f, sma , smb, xcenter, ycenter, blankdata)

        ;openw, blocklun, "/n/Godiva3/jkrick/A2556/galfit/block.log", /GET_LUN, /append
        ;printf, blocklun, xcenter, ycenter, sma, smb
        ;close, blocklun
        ;free_lun, blocklun
       
        true = 1
        IF (xcenter GT 836) AND (xcenter LT 2036) AND (ycenter GT 924) AND (ycenter LT 2124) THEN BEGIN
            galcount = galcount+1
;            printf, gallun, xcenter, ycenter, sma, smb
        ENDIF

        dist = sqrt((1436. - xcenter)^2 + (1524.-ycenter)^2)
        IF (dist LT 616 ) THEN begin
            galbestflux = galbestflux + isoflux
            galisoflux = galisoflux + isocorflux
        ENDIF

        smaarr[smacount] = sma
        smacount = smacount + 1
    ENDIF

    IF (true EQ 0) THEN print, xcenter,ycenter,"did not get blocked"
 
    true = 0

ENDWHILE

smaarr = smaarr[0:smacount-1]
print,"number of stars is:", starcount
print,"number of galaxies is:", galcount
print,"number of cosmic rays is:", crcount
print,"number of dim objects is:", dimcount
;print,"number of saturated objects is:", satcount
print,"total flux_iso in galaxies is:",galbestflux
print,"total flux_isocor in galaxies is:",galisoflux

;print,"number of subtracted galaxies is:", subgalscount
;close the SExtractor file, and free up the lun so it can be used again
close, lun
free_lun, lun

;want to put the sextractor paramters in the header to avoid loosing
;them
j = "j"
OPENR, lunicl, "/n/Godiva3/jkrick/A2556/iclr.sex", /GET_LUN
WHILE (NOT EOF(lunicl)) DO BEGIN
    readf, lunicl, j
    sxaddpar, header, "COMMENT",j
ENDWHILE
close, lunicl
free_lun, lunicl

;write a new fits file with the masked pixels, and one with the stars

fits_write, newimagefile, shift(data, -1,-1), header
lessstars = data - blankdata   ;;;minus
;fits_write, '/n/Godiva4/jkrick/A4010/galfit/nogals.s-stars.fits', shift(lessstars, -1, -1), header

IF run EQ 0 THEN begin
fits_write, '/n/Godiva4/jkrick/A2734/original/mask.block2.r.fits',shift(blankdata,-1,-1), blankheader
fits_write,'/n/Godiva4/jkrick/A2734/original/fullr.block2.fits', data, header
endif
IF run EQ 1 THEN begin
fits_write, '/n/Godiva4/jkrick/A2734/original/mask.test.fits',shift(blankdata,-1,-1), blankheader
fits_write,'/n/Godiva4/jkrick/A2734/original/galphot.bblock.fits', data, header
endif
IF run EQ 2 THEN begin
fits_write, '/n/Godiva4/jkrick/A2734/original/mask.vbblock2.r.fits',shift(blankdata,-1,-1), blankheader
fits_write,'/n/Godiva4/jkrick/A2734/original/fullr.vbblock2.fits', data, header
endif
;make a profile of what is left
;random center choice
;result = funcprof("/n/Godiva4/jkrick/A4010/galfit/nogals.s-stars", 492., 503.)

;undefine, subgals
;ENDWHILE

;device, true=24
;device, decomposed=0


close, /all
ENDFOR
END
